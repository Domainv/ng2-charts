{"version":3,"sources":["webpack:///./dist/chartjs-chart-financial/chartjs-chart-financial.js","webpack:///./dist/ng2-charts/fesm5/ng2-charts.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/bar-chart/bar-chart.component.html","webpack:///./src/app/bar-chart/bar-chart.component.ts?231f","webpack:///./src/app/bubble-chart/bubble-chart.component.html","webpack:///./src/app/bubble-chart/bubble-chart.component.ts?a694","webpack:///./src/app/chart-host/chart-host.component.html","webpack:///./src/app/doughnut-chart/doughnut-chart.component.html","webpack:///./src/app/doughnut-chart/doughnut-chart.component.ts?ab1d","webpack:///./src/app/dynamic-chart/dynamic-chart.component.html","webpack:///./src/app/dynamic-chart/dynamic-chart.component.ts?20aa","webpack:///./src/app/financial-chart/financial-chart.component.html","webpack:///./src/app/financial-chart/financial-chart.component.ts?347c","webpack:///./src/app/line-chart/line-chart.component.html","webpack:///./src/app/line-chart/line-chart.component.ts?399e","webpack:///./src/app/pie-chart/pie-chart.component.html","webpack:///./src/app/pie-chart/pie-chart.component.ts?f8d9","webpack:///./src/app/polar-area-chart/polar-area-chart.component.html","webpack:///./src/app/polar-area-chart/polar-area-chart.component.ts?fdd3","webpack:///./src/app/radar-chart/radar-chart.component.html","webpack:///./src/app/radar-chart/radar-chart.component.ts?be09","webpack:///./src/app/scatter-chart/scatter-chart.component.html","webpack:///./src/app/scatter-chart/scatter-chart.component.ts?a257","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bar-chart/bar-chart.component.scss","webpack:///./src/app/bar-chart/bar-chart.component.ts","webpack:///./src/app/bubble-chart/bubble-chart.component.scss","webpack:///./src/app/bubble-chart/bubble-chart.component.ts","webpack:///./src/app/chart-host/chart-host.component.scss","webpack:///./src/app/chart-host/chart-host.component.ts","webpack:///./src/app/doughnut-chart/doughnut-chart.component.scss","webpack:///./src/app/doughnut-chart/doughnut-chart.component.ts","webpack:///./src/app/dynamic-chart/dynamic-chart.component.scss","webpack:///./src/app/dynamic-chart/dynamic-chart.component.ts","webpack:///./src/app/financial-chart/financial-chart.component.css","webpack:///./src/app/financial-chart/financial-chart.component.ts","webpack:///./src/app/line-chart/line-chart.component.scss","webpack:///./src/app/line-chart/line-chart.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/pie-chart/pie-chart.component.scss","webpack:///./src/app/pie-chart/pie-chart.component.ts","webpack:///./src/app/polar-area-chart/polar-area-chart.component.scss","webpack:///./src/app/polar-area-chart/polar-area-chart.component.ts","webpack:///./src/app/radar-chart/radar-chart.component.scss","webpack:///./src/app/radar-chart/radar-chart.component.ts","webpack:///./src/app/scatter-chart/scatter-chart.component.scss","webpack:///./src/app/scatter-chart/scatter-chart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAA4D,WAAW,mBAAO,CAAC,uDAAU;AACzF,SACgD;AAChD,CAAC,yBAAyB;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;;AAED,mDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAE;;AAEF,CAAC;;AAED;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;;AAED,4CAA4C;AAC5C;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,CAAC;;AAED,CAAC;;;;;;;;;;;;;AC3cD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAClF;AACC;AACL;AACJ;;AAEnC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA,oBAAoB;AACpB;AACA,qBAAqB,eAAe,EAAE;AACtC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uBAAuB,EAAE;AACnD;AACA,oBAAoB;AACpB;AACA,qBAAqB,eAAe,EAAE;AACtC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uBAAuB,EAAE;AACnD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uBAAuB,EAAE;AACnD;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uBAAuB,EAAE;AACnD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uBAAuB,EAAE;AACnD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,uCAAuC,oDAAe,GAAG;AACzD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C,WAAW;AAC1D,sDAAsD,wEAAkB,EAAE,2CAA2C,2BAA2B,EAAE,2CAA2C;AAC7L;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,8CAAO;AACf;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,QAAQ,8CAAO;AACf;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,8BAA8B,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,oDAAoD,EAAE;AAC/E;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,eAAe,EAAE;AAC3C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,2DAA2D,EAAE;AACtF;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mDAAmD,EAAE;AAC9E;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,2BAA2B,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mDAAmD,EAAE;AAC9E;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,2BAA2B,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,sDAAQ;AAC3B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,sDAAQ,GAAG;AAClG;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,wBAAwB,EAAE;AAChD;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sCAAsC;AACtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE,aAAa;AACb;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA,uCAAuC,+BAA+B;AACtE,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,8CAAO;AAC1B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA,sBAAsB,wDAAS;AAC/B;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,eAAe,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,0BAA0B,EAAE;AAC9C;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB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","file":"main.js","sourcesContent":["/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.1.0\n *\n * Copyright 2019 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('chart.js')) :\ntypeof define === 'function' && define.amd ? define(['chart.js'], factory) :\n(global = global || self, factory(global.Chart));\n}(this, function (Chart) { 'use strict';\n\nChart = Chart && Chart.hasOwnProperty('default') ? Chart['default'] : Chart;\n\nvar helpers = Chart.helpers;\n\nvar defaultConfig = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: Chart.Ticks.formatters.linear\n\t}\n};\n\nvar FinancialLinearScale = Chart.scaleService.getScaleConstructor('linear').extend({\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\t// Regular charts use x, y values\n\t\t// For the financial chart we have rawValue.h (hi) and rawValue.l (low) for each point\n\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\thelpers.each(dataset.data, function(rawValue) {\n\t\t\t\t\tvar high = rawValue.h;\n\t\t\t\t\tvar low = rawValue.l;\n\n\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\tme.min = low;\n\t\t\t\t\t} else if (low < me.min) {\n\t\t\t\t\t\tme.min = low;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\tme.max = high;\n\t\t\t\t\t} else if (high > me.max) {\n\t\t\t\t\t\tme.max = high;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Add whitespace around bars. Axis shouldn't go exactly from min to max\n\t\tvar space = (me.max - me.min) * 0.05;\n\t\tme.min -= space;\n\t\tme.max += space;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t}\n});\n\nChart.scaleService.registerScaleType('financialLinear', FinancialLinearScale, defaultConfig);\n\nvar helpers$1 = Chart.helpers;\n\nChart.defaults.financial = {\n\tlabel: '',\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'time',\n\t\t\tdistribution: 'series',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\tticks: {\n\t\t\t\tsource: 'data'\n\t\t\t}\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'financialLinear'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tintersect: false,\n\t\tmode: 'index',\n\t\tcallbacks: {\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar o = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].o;\n\t\t\t\tvar h = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].h;\n\t\t\t\tvar l = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].l;\n\t\t\t\tvar c = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].c;\n\n\t\t\t\tvar dataset = data.datasets[tooltipItem.datasetIndex];\n\t\t\t\tvar precision = helpers$1.valueOrDefault(dataset.precision, 2);\n\t\t\t\tprecision = Math.max(0, Math.min(100, precision));\n\t\t\t\to = o.toFixed(precision);\n\t\t\t\th = h.toFixed(precision);\n\t\t\t\tl = l.toFixed(precision);\n\t\t\t\tc = c.toFixed(precision);\n\n\t\t\t\treturn ' O: ' + o + '    H: ' + h + '    L: ' + l + '    C: ' + c;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nvar FinancialController = Chart.controllers.bar.extend({\n\n\tdataElementType: Chart.elements.Financial,\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(element, index, reset) {\n\t\tvar me = this;\n\t\tvar model = element._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar indexData = datasets[me.index].data[index];\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\tmodel.candleOpen = vscale.getPixelForValue(Number(indexData.o));\n\t\tmodel.candleHigh = vscale.getPixelForValue(Number(indexData.h));\n\t\tmodel.candleLow = vscale.getPixelForValue(Number(indexData.l));\n\t\tmodel.candleClose = vscale.getPixelForValue(Number(indexData.c));\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this.chart.chart.ctx;\n\t\tvar elements = this.getMeta().data;\n\t\tvar dataset = this.getDataset();\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\t\tvar d;\n\n\t\tChart.canvasHelpers.clipArea(ctx, this.chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\td = dataset.data[i].o;\n\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t}\n\n\t\tChart.canvasHelpers.unclipArea(ctx);\n\t},\n});\n\nvar helpers$2 = Chart.helpers;\nvar globalOpts = Chart.defaults.global;\n\nglobalOpts.elements.financial = {\n\tcolor: {\n\t\tup: 'rgba(80, 160, 115, 1)',\n\t\tdown: 'rgba(215, 85, 65, 1)',\n\t\tunchanged: 'rgba(90, 90, 90, 1)',\n\t}\n};\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the candle\n * @private\n * @param bar {Chart.Element.financial} the bar\n * @return {Bounds} bounds of the bar\n */\nfunction getBarBounds(candle) {\n\tvar vm = candle._view;\n\tvar x1, x2, y1, y2;\n\n\tvar halfWidth = vm.width / 2;\n\tx1 = vm.x - halfWidth;\n\tx2 = vm.x + halfWidth;\n\ty1 = vm.candleHigh;\n\ty2 = vm.candleLow;\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nvar FinancialElement = Chart.Element.extend({\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: (vm.candleHigh + vm.candleLow) / 2\n\t\t};\n\t},\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: (vm.candleOpen + vm.candleClose) / 2\n\t\t};\n\t},\n\thasValue: function() {\n\t\tvar model = this._model;\n\t\treturn helpers$2.isNumber(model.x) &&\n\t\t\thelpers$2.isNumber(model.candleOpen) &&\n\t\t\thelpers$2.isNumber(model.candleHigh) &&\n\t\t\thelpers$2.isNumber(model.candleLow) &&\n\t\t\thelpers$2.isNumber(model.candleClose);\n\t}\n});\n\nvar helpers$3 = Chart.helpers;\nvar globalOpts$1 = Chart.defaults.global;\n\nglobalOpts$1.elements.candlestick = helpers$3.merge({}, [globalOpts$1.elements.financial, {\n\tborderColor: globalOpts$1.elements.financial.color.unchanged,\n\tborderWidth: 1,\n}]);\n\nvar CandlestickElement = FinancialElement.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tvar x = vm.x;\n\t\tvar o = vm.candleOpen;\n\t\tvar h = vm.candleHigh;\n\t\tvar l = vm.candleLow;\n\t\tvar c = vm.candleClose;\n\n\t\tvar borderColors = vm.borderColor;\n\t\tif (typeof borderColors === 'string') {\n\t\t\tborderColors = {\n\t\t\t\tup: borderColors,\n\t\t\t\tdown: borderColors,\n\t\t\t\tunchanged: borderColors\n\t\t\t};\n\t\t}\n\n\t\tvar borderColor;\n\t\tif (c < o) {\n\t\t\tborderColor = helpers$3.getValueOrDefault(borderColors ? borderColors.up : undefined, globalOpts$1.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = helpers$3.getValueOrDefault(vm.color ? vm.color.up : undefined, globalOpts$1.elements.candlestick.color.up);\n\t\t} else if (c > o) {\n\t\t\tborderColor = helpers$3.getValueOrDefault(borderColors ? borderColors.down : undefined, globalOpts$1.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = helpers$3.getValueOrDefault(vm.color ? vm.color.down : undefined, globalOpts$1.elements.candlestick.color.down);\n\t\t} else {\n\t\t\tborderColor = helpers$3.getValueOrDefault(borderColors ? borderColors.unchanged : undefined, globalOpts$1.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = helpers$3.getValueOrDefault(vm.color ? vm.color.unchanged : undefined, globalOpts$1.elements.candlestick.color.unchanged);\n\t\t}\n\n\t\tctx.lineWidth = helpers$3.getValueOrDefault(vm.borderWidth, globalOpts$1.elements.candlestick.borderWidth);\n\t\tctx.strokeStyle = helpers$3.getValueOrDefault(borderColor, globalOpts$1.elements.candlestick.borderColor);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, h);\n\t\tctx.lineTo(x, Math.min(o, c));\n\t\tctx.moveTo(x, l);\n\t\tctx.lineTo(x, Math.max(o, c));\n\t\tctx.stroke();\n\t\tctx.fillRect(x - vm.width / 2, c, vm.width, o - c);\n\t\tctx.strokeRect(x - vm.width / 2, c, vm.width, o - c);\n\t\tctx.closePath();\n\t},\n});\n\nChart.defaults.candlestick = Chart.helpers.merge({}, Chart.defaults.financial);\n\nvar CandlestickController = Chart.controllers.candlestick = FinancialController.extend({\n\tdataElementType: CandlestickElement,\n\n\tupdateElement: function(element, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\telement._xScale = me.getScaleForId(meta.xAxisID);\n\t\telement._yScale = me.getScaleForId(meta.yAxisID);\n\t\telement._datasetIndex = me.index;\n\t\telement._index = index;\n\n\t\telement._model = {\n\t\t\tdatasetLabel: dataset.label || '',\n\t\t\t// label: '', // to get label value please use dataset.data[index].label\n\n\t\t\t// Appearance\n\t\t\tcolor: dataset.color,\n\t\t\tborderColor: dataset.borderColor,\n\t\t\tborderWidth: dataset.borderWidth,\n\t\t};\n\n\t\tme._updateElementGeometry(element, index, reset);\n\n\t\telement.pivot();\n\t},\n\n});\n\nvar helpers$4 = Chart.helpers;\nvar globalOpts$2 = Chart.defaults.global;\n\nglobalOpts$2.elements.ohlc = helpers$4.merge({}, [globalOpts$2.elements.financial, {\n\tlineWidth: 2,\n\tarmLength: null,\n\tarmLengthRatio: 0.8,\n}]);\n\nvar OhlcElement = FinancialElement.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tvar x = vm.x;\n\t\tvar o = vm.candleOpen;\n\t\tvar h = vm.candleHigh;\n\t\tvar l = vm.candleLow;\n\t\tvar c = vm.candleClose;\n\t\tvar armLength = helpers$4.getValueOrDefault(vm.armLength, globalOpts$2.elements.ohlc.armLength);\n\t\tvar armLengthRatio = helpers$4.getValueOrDefault(vm.armLengthRatio, globalOpts$2.elements.ohlc.armLengthRatio);\n\t\tif (armLength === null) {\n\t\t\t// The width of an ohlc is affected by barPercentage and categoryPercentage\n\t\t\t// This behavior is caused by extending controller.financial, which extends controller.bar\n\t\t\t// barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n\t\t\t// and armLengthRatio is multipled by 0.5,\n\t\t\t// so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n\t\t\t// and when armLengthRatio=0.0, ohcl are just vertical lines.\n\t\t\tarmLength = vm.width * armLengthRatio * 0.5;\n\t\t}\n\n\t\tif (c < o) {\n\t\t\tctx.strokeStyle = helpers$4.getValueOrDefault(vm.color ? vm.color.up : undefined, globalOpts$2.elements.ohlc.color.up);\n\t\t} else if (c > o) {\n\t\t\tctx.strokeStyle = helpers$4.getValueOrDefault(vm.color ? vm.color.down : undefined, globalOpts$2.elements.ohlc.color.down);\n\t\t} else {\n\t\t\tctx.strokeStyle = helpers$4.getValueOrDefault(vm.color ? vm.color.unchanged : undefined, globalOpts$2.elements.ohlc.color.unchanged);\n\t\t}\n\t\tctx.lineWidth = helpers$4.getValueOrDefault(vm.lineWidth, globalOpts$2.elements.ohlc.lineWidth);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, h);\n\t\tctx.lineTo(x, l);\n\t\tctx.moveTo(x - armLength, o);\n\t\tctx.lineTo(x, o);\n\t\tctx.moveTo(x + armLength, c);\n\t\tctx.lineTo(x, c);\n\t\tctx.stroke();\n\t},\n});\n\nChart.defaults.ohlc = Chart.helpers.merge({}, Chart.defaults.financial);\nChart.defaults.ohlc.scales.xAxes[0].barPercentage = 1.0;\nChart.defaults.ohlc.scales.xAxes[0].categoryPercentage = 1.0;\n\nvar OhlcController = Chart.controllers.ohlc = FinancialController.extend({\n\n\tdataElementType: OhlcElement,\n\n\tupdateElement: function(element, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\telement._xScale = me.getScaleForId(meta.xAxisID);\n\t\telement._yScale = me.getScaleForId(meta.yAxisID);\n\t\telement._datasetIndex = me.index;\n\t\telement._index = index;\n\t\telement._model = {\n\t\t\tdatasetLabel: dataset.label || '',\n\t\t\tlineWidth: dataset.lineWidth,\n\t\t\tarmLength: dataset.armLength,\n\t\t\tarmLengthRatio: dataset.armLengthRatio,\n\t\t\tcolor: dataset.color,\n\t\t};\n\t\tme._updateElementGeometry(element, index, reset);\n\t\telement.pivot();\n\t},\n\n});\n\n}));\n","import { Injectable, ɵɵdefineInjectable, Directive, ElementRef, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { __spread, __assign } from 'tslib';\nimport { Chart as Chart$1 } from 'chart.js';\nimport { BehaviorSubject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar defaultColors = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generate colors by chart type\n * @param {?} chartType\n * @param {?} index\n * @param {?} count\n * @return {?}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    if (chartType === 'bubble') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'scatter') {\n        return formatPieColors(generateColors(count));\n    }\n    throw new Error(\"getColors - Unsupported chart type \" + chartType);\n}\n/**\n * @param {?} colour\n * @param {?} alpha\n * @return {?}\n */\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n/**\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 0.6); })),\n        borderColor: colors.map((/**\n         * @return {?}\n         */\n        function () { return '#fff'; })),\n        pointBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 1); })),\n        pointBorderColor: colors.map((/**\n         * @return {?}\n         */\n        function () { return '#fff'; })),\n        pointHoverBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 1); })),\n        pointHoverBorderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 1); }))\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 0.6); })),\n        borderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 1); })),\n        hoverBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 0.8); })),\n        hoverBorderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        function (color) { return rgba(color, 1); }))\n    };\n}\n/**\n * @return {?}\n */\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param {?} index\n * @return {?}\n */\nfunction generateColor(index) {\n    return defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param {?} count\n * @return {?}\n */\nfunction generateColors(count) {\n    /** @type {?} */\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ThemeService = /** @class */ (function () {\n    function ThemeService() {\n        this.pColorschemesOptions = {};\n        this.colorschemesOptions = new BehaviorSubject({});\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    ThemeService.prototype.setColorschemesOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        this.pColorschemesOptions = options;\n        this.colorschemesOptions.next(options);\n    };\n    /**\n     * @return {?}\n     */\n    ThemeService.prototype.getColorschemesOptions = /**\n     * @return {?}\n     */\n    function () {\n        return this.pColorschemesOptions;\n    };\n    ThemeService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    ThemeService.ctorParameters = function () { return []; };\n    /** @nocollapse */ ThemeService.ngInjectableDef = ɵɵdefineInjectable({ factory: function ThemeService_Factory() { return new ThemeService(); }, token: ThemeService, providedIn: \"root\" });\n    return ThemeService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar UpdateType = {\n    Default: 0,\n    Update: 1,\n    Refresh: 2,\n};\nUpdateType[UpdateType.Default] = 'Default';\nUpdateType[UpdateType.Update] = 'Update';\nUpdateType[UpdateType.Refresh] = 'Refresh';\nvar BaseChartDirective = /** @class */ (function () {\n    function BaseChartDirective(element, themeService) {\n        this.element = element;\n        this.themeService = themeService;\n        this.options = {};\n        this.chartClick = new EventEmitter();\n        this.chartHover = new EventEmitter();\n        this.old = {\n            dataExists: false,\n            dataLength: 0,\n            datasetsExists: false,\n            datasetsLength: 0,\n            datasetsDataObjects: [],\n            datasetsDataLengths: [],\n            colorsExists: false,\n            colors: [],\n            labelsExist: false,\n            labels: [],\n            legendExists: false,\n            legend: {},\n        };\n        this.subs = [];\n    }\n    /**\n     * Register a plugin.\n     */\n    /**\n     * Register a plugin.\n     * @param {?} plugin\n     * @return {?}\n     */\n    BaseChartDirective.registerPlugin = /**\n     * Register a plugin.\n     * @param {?} plugin\n     * @return {?}\n     */\n    function (plugin) {\n        Chart$1.plugins.register(plugin);\n    };\n    /**\n     * @param {?} plugin\n     * @return {?}\n     */\n    BaseChartDirective.unregisterPlugin = /**\n     * @param {?} plugin\n     * @return {?}\n     */\n    function (plugin) {\n        Chart$1.plugins.unregister(plugin);\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.refresh();\n        this.subs.push(this.themeService.colorschemesOptions.subscribe((/**\n         * @param {?} r\n         * @return {?}\n         */\n        function (r) { return _this.themeChanged(r); })));\n    };\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    BaseChartDirective.prototype.themeChanged = /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        this.refresh();\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.chart) {\n            return;\n        }\n        /** @type {?} */\n        var updateRequired = UpdateType.Default;\n        /** @type {?} */\n        var wantUpdate = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) {\n            updateRequired = x > updateRequired ? x : updateRequired;\n        });\n        if (!!this.data !== this.old.dataExists) {\n            this.propagateDataToDatasets(this.data);\n            this.old.dataExists = !!this.data;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.data && this.data.length !== this.old.dataLength) {\n            this.old.dataLength = this.data && this.data.length || 0;\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.datasets !== this.old.datasetsExists) {\n            this.old.datasetsExists = !!this.datasets;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n            this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        function (x, i) { return x.data !== _this.old.datasetsDataObjects[i]; })).length) {\n            this.old.datasetsDataObjects = this.datasets.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.data; }));\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        function (x, i) { return x.data.length !== _this.old.datasetsDataLengths[i]; })).length) {\n            this.old.datasetsDataLengths = this.datasets.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return x.data.length; }));\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.colors !== this.old.colorsExists) {\n            this.old.colorsExists = !!this.colors;\n            this.updateColors();\n            wantUpdate(UpdateType.Update);\n        }\n        // This smells of inefficiency, might need to revisit this\n        if (this.colors && this.colors.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        function (x, i) { return !_this.colorsEqual(x, _this.old.colors[i]); })).length) {\n            this.old.colors = this.colors.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return _this.copyColor(x); }));\n            this.updateColors();\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.labels !== this.old.labelsExist) {\n            this.old.labelsExist = !!this.labels;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.labels && this.labels.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        function (x, i) { return !_this.labelsEqual(x, _this.old.labels[i]); })).length) {\n            this.old.labels = this.labels.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            function (x) { return _this.copyLabel(x); }));\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.options.legend !== this.old.legendExists) {\n            this.old.legendExists = !!this.options.legend;\n            wantUpdate(UpdateType.Refresh);\n        }\n        if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n            this.old.legend.position = this.options.legend.position;\n            wantUpdate(UpdateType.Refresh);\n        }\n        switch ((/** @type {?} */ (updateRequired))) {\n            case UpdateType.Default:\n                break;\n            case UpdateType.Update:\n                this.update();\n                break;\n            case UpdateType.Refresh:\n                this.refresh();\n                break;\n        }\n    };\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n    BaseChartDirective.prototype.copyLabel = /**\n     * @param {?} a\n     * @return {?}\n     */\n    function (a) {\n        if (Array.isArray(a)) {\n            return __spread(a);\n        }\n        return a;\n    };\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    BaseChartDirective.prototype.labelsEqual = /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function (a, b) {\n        return Array.isArray(a) === Array.isArray(b)\n            && (Array.isArray(a) || a === b)\n            && (!Array.isArray(a) || a.length === b.length)\n            && (!Array.isArray(a) || a.filter((/**\n             * @param {?} x\n             * @param {?} i\n             * @return {?}\n             */\n            function (x, i) { return x !== b[i]; })).length === 0);\n    };\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n    BaseChartDirective.prototype.copyColor = /**\n     * @param {?} a\n     * @return {?}\n     */\n    function (a) {\n        /** @type {?} */\n        var rc = {\n            backgroundColor: a.backgroundColor,\n            borderWidth: a.borderWidth,\n            borderColor: a.borderColor,\n            borderCapStyle: a.borderCapStyle,\n            borderDash: a.borderDash,\n            borderDashOffset: a.borderDashOffset,\n            borderJoinStyle: a.borderJoinStyle,\n            pointBorderColor: a.pointBorderColor,\n            pointBackgroundColor: a.pointBackgroundColor,\n            pointBorderWidth: a.pointBorderWidth,\n            pointRadius: a.pointRadius,\n            pointHoverRadius: a.pointHoverRadius,\n            pointHitRadius: a.pointHitRadius,\n            pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n            pointHoverBorderColor: a.pointHoverBorderColor,\n            pointHoverBorderWidth: a.pointHoverBorderWidth,\n            pointStyle: a.pointStyle,\n            hoverBackgroundColor: a.hoverBackgroundColor,\n            hoverBorderColor: a.hoverBorderColor,\n            hoverBorderWidth: a.hoverBorderWidth,\n        };\n        return rc;\n    };\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    BaseChartDirective.prototype.colorsEqual = /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function (a, b) {\n        if (!a !== !b) {\n            return false;\n        }\n        return !a || a.backgroundColor === b.backgroundColor\n            && (a.borderWidth === b.borderWidth)\n            && (a.borderColor === b.borderColor)\n            && (a.borderCapStyle === b.borderCapStyle)\n            && (a.borderDash === b.borderDash)\n            && (a.borderDashOffset === b.borderDashOffset)\n            && (a.borderJoinStyle === b.borderJoinStyle)\n            && (a.pointBorderColor === b.pointBorderColor)\n            && (a.pointBackgroundColor === b.pointBackgroundColor)\n            && (a.pointBorderWidth === b.pointBorderWidth)\n            && (a.pointRadius === b.pointRadius)\n            && (a.pointHoverRadius === b.pointHoverRadius)\n            && (a.pointHitRadius === b.pointHitRadius)\n            && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\n            && (a.pointHoverBorderColor === b.pointHoverBorderColor)\n            && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\n            && (a.pointStyle === b.pointStyle)\n            && (a.hoverBackgroundColor === b.hoverBackgroundColor)\n            && (a.hoverBorderColor === b.hoverBorderColor)\n            && (a.hoverBorderWidth === b.hoverBorderWidth);\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.updateColors = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.datasets.forEach((/**\n         * @param {?} elm\n         * @param {?} index\n         * @return {?}\n         */\n        function (elm, index) {\n            if (_this.colors && _this.colors[index]) {\n                Object.assign(elm, _this.colors[index]);\n            }\n            else {\n                Object.assign(elm, getColors(_this.chartType, index, elm.data.length), __assign({}, elm));\n            }\n        }));\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    BaseChartDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var updateRequired = UpdateType.Default;\n        /** @type {?} */\n        var wantUpdate = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) {\n            updateRequired = x > updateRequired ? x : updateRequired;\n        });\n        // Check if the changes are in the data or datasets or labels or legend\n        if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n            this.propagateDataToDatasets(changes.data.currentValue);\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n            this.propagateDatasetsToData(changes.datasets.currentValue);\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('labels')) {\n            if (this.chart) {\n                this.chart.data.labels = changes.labels.currentValue;\n            }\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('legend')) {\n            if (this.chart) {\n                this.chart.config.options.legend.display = changes.legend.currentValue;\n                this.chart.generateLegend();\n            }\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('options')) {\n            wantUpdate(UpdateType.Refresh);\n        }\n        switch ((/** @type {?} */ (updateRequired))) {\n            case UpdateType.Update:\n                this.update();\n                break;\n            case UpdateType.Refresh:\n            case UpdateType.Default:\n                this.refresh();\n                break;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n        this.subs.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) { return x.unsubscribe(); }));\n    };\n    /**\n     * @param {?=} duration\n     * @param {?=} lazy\n     * @return {?}\n     */\n    BaseChartDirective.prototype.update = /**\n     * @param {?=} duration\n     * @param {?=} lazy\n     * @return {?}\n     */\n    function (duration, lazy) {\n        if (this.chart) {\n            return this.chart.update(duration, lazy);\n        }\n    };\n    /**\n     * @param {?} index\n     * @param {?} hidden\n     * @return {?}\n     */\n    BaseChartDirective.prototype.hideDataset = /**\n     * @param {?} index\n     * @param {?} hidden\n     * @return {?}\n     */\n    function (index, hidden) {\n        this.chart.getDatasetMeta(index).hidden = hidden;\n        this.chart.update();\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    BaseChartDirective.prototype.isDatasetHidden = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        return this.chart.getDatasetMeta(index).hidden;\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.toBase64Image = /**\n     * @return {?}\n     */\n    function () {\n        return this.chart.toBase64Image();\n    };\n    /**\n     * @return {?}\n     */\n    BaseChartDirective.prototype.getChartConfiguration = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var datasets = this.getDatasets();\n        /** @type {?} */\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hook for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = (/**\n             * @param {?} event\n             * @param {?} active\n             * @return {?}\n             */\n            function (event, active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ event: event, active: active });\n            });\n        }\n        if (!options.onClick) {\n            options.onClick = (/**\n             * @param {?=} event\n             * @param {?=} active\n             * @return {?}\n             */\n            function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            });\n        }\n        /** @type {?} */\n        var mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n        /** @type {?} */\n        var chartConfig = {\n            type: this.chartType,\n            data: {\n                labels: this.labels || [],\n                datasets: datasets\n            },\n            plugins: this.plugins,\n            options: mergedOptions,\n        };\n        return chartConfig;\n    };\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    BaseChartDirective.prototype.getChartBuilder = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx /*, data:any[], options:any*/) {\n        /** @type {?} */\n        var chartConfig = this.getChartConfiguration();\n        return new Chart$1(ctx, chartConfig);\n    };\n    /**\n     * @param {?} options\n     * @param {?} overrides\n     * @param {?=} level\n     * @return {?}\n     */\n    BaseChartDirective.prototype.smartMerge = /**\n     * @param {?} options\n     * @param {?} overrides\n     * @param {?=} level\n     * @return {?}\n     */\n    function (options, overrides, level) {\n        var _this = this;\n        if (level === void 0) { level = 0; }\n        if (level === 0) {\n            options = cloneDeep(options);\n        }\n        /** @type {?} */\n        var keysToUpdate = Object.keys(overrides);\n        keysToUpdate.forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        function (key) {\n            if (Array.isArray(overrides[key])) {\n                /** @type {?} */\n                var arrayElements = options[key];\n                if (arrayElements) {\n                    arrayElements.forEach((/**\n                     * @param {?} r\n                     * @return {?}\n                     */\n                    function (r) {\n                        _this.smartMerge(r, overrides[key][0], level + 1);\n                    }));\n                }\n            }\n            else if (typeof (overrides[key]) === 'object') {\n                if (!(key in options)) {\n                    options[key] = {};\n                }\n                _this.smartMerge(options[key], overrides[key], level + 1);\n            }\n            else {\n                options[key] = overrides[key];\n            }\n        }));\n        if (level === 0) {\n            return options;\n        }\n    };\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    BaseChartDirective.prototype.isMultiLineLabel = /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    function (label) {\n        return Array.isArray(label);\n    };\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    BaseChartDirective.prototype.joinLabel = /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    function (label) {\n        if (!label) {\n            return null;\n        }\n        if (this.isMultiLineLabel(label)) {\n            return label.join(' ');\n        }\n        else {\n            return label;\n        }\n    };\n    /**\n     * @private\n     * @param {?} datasets\n     * @return {?}\n     */\n    BaseChartDirective.prototype.propagateDatasetsToData = /**\n     * @private\n     * @param {?} datasets\n     * @return {?}\n     */\n    function (datasets) {\n        this.data = this.datasets.map((/**\n         * @param {?} r\n         * @return {?}\n         */\n        function (r) { return r.data; }));\n        if (this.chart) {\n            this.chart.data.datasets = datasets;\n        }\n        this.updateColors();\n    };\n    /**\n     * @private\n     * @param {?} newDataValues\n     * @return {?}\n     */\n    BaseChartDirective.prototype.propagateDataToDatasets = /**\n     * @private\n     * @param {?} newDataValues\n     * @return {?}\n     */\n    function (newDataValues) {\n        var _this = this;\n        if (this.isMultiDataSet(newDataValues)) {\n            if (this.datasets && newDataValues.length === this.datasets.length) {\n                this.datasets.forEach((/**\n                 * @param {?} dataset\n                 * @param {?} i\n                 * @return {?}\n                 */\n                function (dataset, i) {\n                    dataset.data = newDataValues[i];\n                }));\n            }\n            else {\n                this.datasets = newDataValues.map((/**\n                 * @param {?} data\n                 * @param {?} index\n                 * @return {?}\n                 */\n                function (data, index) {\n                    return { data: data, label: _this.joinLabel(_this.labels[index]) || \"Label \" + index };\n                }));\n                if (this.chart) {\n                    this.chart.data.datasets = this.datasets;\n                }\n            }\n        }\n        else {\n            if (!this.datasets) {\n                this.datasets = [{ data: newDataValues }];\n                if (this.chart) {\n                    this.chart.data.datasets = this.datasets;\n                }\n            }\n            else {\n                this.datasets[0].data = newDataValues;\n                this.datasets.splice(1); // Remove all elements but the first\n            }\n        }\n        this.updateColors();\n    };\n    /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n    BaseChartDirective.prototype.isMultiDataSet = /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        return Array.isArray(data[0]);\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    BaseChartDirective.prototype.getDatasets = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.datasets && !this.data) {\n            throw new Error(\"ng-charts configuration error, data or datasets field are required to render chart \" + this.chartType);\n        }\n        // If `datasets` is defined, use it over the `data` property.\n        if (this.datasets) {\n            this.propagateDatasetsToData(this.datasets);\n            return this.datasets;\n        }\n        if (this.data) {\n            this.propagateDataToDatasets(this.data);\n            return this.datasets;\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    BaseChartDirective.prototype.refresh = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n        if (this.ctx) {\n            this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n        }\n    };\n    BaseChartDirective.decorators = [\n        { type: Directive, args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: 'canvas[baseChart]',\n                    exportAs: 'base-chart'\n                },] }\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ThemeService }\n    ]; };\n    BaseChartDirective.propDecorators = {\n        data: [{ type: Input }],\n        datasets: [{ type: Input }],\n        labels: [{ type: Input }],\n        options: [{ type: Input }],\n        chartType: [{ type: Input }],\n        colors: [{ type: Input }],\n        legend: [{ type: Input }],\n        plugins: [{ type: Input }],\n        chartClick: [{ type: Output }],\n        chartHover: [{ type: Output }]\n    };\n    return BaseChartDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ChartsModule = /** @class */ (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    imports: [],\n                    exports: [\n                        BaseChartDirective\n                    ]\n                },] }\n    ];\n    return ChartsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n/**\n * @return {?}\n */\nfunction monkeyPatchChartJsLegend() {\n    if (typeof Chart === 'undefined') {\n        console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n        return;\n    }\n    /** @type {?} */\n    var plugins = Chart.plugins.getAll();\n    /** @type {?} */\n    var legend = plugins.filter((/**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { return p.id === 'legend'; }))[0];\n    legend._element.prototype.fit = fit;\n    legend._element.prototype.draw = draw;\n    /** @type {?} */\n    var helpers = Chart.helpers;\n    /** @type {?} */\n    var defaults = Chart.defaults;\n    /** @type {?} */\n    var valueOrDefault = helpers.valueOrDefault;\n    /**\n     * @param {?} labelOpts\n     * @param {?} fontSize\n     * @return {?}\n     */\n    function getBoxWidth(labelOpts, fontSize) {\n        return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n            fontSize :\n            labelOpts.boxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    function fit() {\n        /** @type {?} */\n        var me = this;\n        /** @type {?} */\n        var opts = me.options;\n        /** @type {?} */\n        var labelOpts = opts.labels;\n        /** @type {?} */\n        var display = opts.display;\n        /** @type {?} */\n        var ctx = me.ctx;\n        /** @type {?} */\n        var labelFont = helpers.options._parseFont(labelOpts);\n        /** @type {?} */\n        var fontSize = labelFont.size;\n        // Reset hit boxes\n        /** @type {?} */\n        var hitboxes = me.legendHitBoxes = [];\n        /** @type {?} */\n        var minSize = me.minSize;\n        /** @type {?} */\n        var isHorizontal = me.isHorizontal();\n        if (isHorizontal) {\n            minSize.width = me.maxWidth; // fill all the width\n            minSize.height = display ? 10 : 0;\n        }\n        else {\n            minSize.width = display ? 10 : 0;\n            minSize.height = me.maxHeight; // fill all the height\n        }\n        /** @type {?} */\n        var getMaxLineWidth = (/**\n         * @param {?} textLines\n         * @return {?}\n         */\n        function (textLines) {\n            return textLines.map((/**\n             * @param {?} textLine\n             * @return {?}\n             */\n            function (textLine) {\n                return ctx.measureText(textLine).width;\n            })).reduce((/**\n             * @param {?} acc\n             * @param {?} v\n             * @return {?}\n             */\n            function (acc, v) {\n                return v > acc ? v : acc;\n            }), 0);\n        });\n        // Increase sizes here\n        if (display) {\n            ctx.font = labelFont.string;\n            if (isHorizontal) {\n                // Labels\n                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n                /** @type {?} */\n                var lineWidths = me.lineWidths = [0];\n                /** @type {?} */\n                var lineHeights = me.lineHeights = [];\n                /** @type {?} */\n                var currentLineHeight = 0;\n                /** @type {?} */\n                var lineIndex = 0;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'top';\n                helpers.each(me.legendItems, (/**\n                 * @param {?} legendItem\n                 * @param {?} i\n                 * @return {?}\n                 */\n                function (legendItem, i) {\n                    /** @type {?} */\n                    var width;\n                    /** @type {?} */\n                    var height;\n                    if (helpers.isArray(legendItem.text)) {\n                        width = getMaxLineWidth(legendItem.text);\n                        height = fontSize * legendItem.text.length + labelOpts.padding;\n                    }\n                    else {\n                        width = ctx.measureText(legendItem.text).width;\n                        height = fontSize + labelOpts.padding;\n                    }\n                    width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n                    if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n                        lineHeights.push(currentLineHeight);\n                        currentLineHeight = 0;\n                        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                        lineIndex++;\n                    }\n                    legendItem.lineOrColumnIndex = lineIndex;\n                    if (height > currentLineHeight) {\n                        currentLineHeight = height;\n                    }\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: width,\n                        height: height,\n                    };\n                    lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n                }));\n                lineHeights.push(currentLineHeight);\n                minSize.height += lineHeights.reduce((/**\n                 * @param {?} acc\n                 * @param {?} v\n                 * @return {?}\n                 */\n                function (acc, v) {\n                    return acc + v;\n                }), 0);\n            }\n            else {\n                /** @type {?} */\n                var vPadding = labelOpts.padding;\n                /** @type {?} */\n                var columnWidths = me.columnWidths = [];\n                /** @type {?} */\n                var columnHeights = me.columnHeights = [];\n                /** @type {?} */\n                var totalWidth = labelOpts.padding;\n                /** @type {?} */\n                var currentColWidth = 0;\n                /** @type {?} */\n                var currentColHeight = 0;\n                /** @type {?} */\n                var columnIndex = 0;\n                helpers.each(me.legendItems, (/**\n                 * @param {?} legendItem\n                 * @param {?} i\n                 * @return {?}\n                 */\n                function (legendItem, i) {\n                    /** @type {?} */\n                    var itemWidth;\n                    /** @type {?} */\n                    var height;\n                    if (helpers.isArray(legendItem.text)) {\n                        itemWidth = getMaxLineWidth(legendItem.text);\n                        height = fontSize * legendItem.text.length;\n                    }\n                    else {\n                        itemWidth = ctx.measureText(legendItem.text).width;\n                        height = fontSize;\n                    }\n                    itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n                    // If too tall, go to new column\n                    if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n                        totalWidth += currentColWidth + labelOpts.padding;\n                        columnWidths.push(currentColWidth); // previous column width\n                        columnHeights.push(currentColHeight);\n                        currentColWidth = 0;\n                        currentColHeight = 0;\n                        columnIndex++;\n                    }\n                    legendItem.lineOrColumnIndex = columnIndex;\n                    // Get max width\n                    currentColWidth = Math.max(currentColWidth, itemWidth);\n                    currentColHeight += height + vPadding;\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: itemWidth,\n                        height: height\n                    };\n                }));\n                totalWidth += currentColWidth;\n                columnWidths.push(currentColWidth);\n                columnHeights.push(currentColHeight);\n                minSize.width += totalWidth;\n            }\n        }\n        me.width = minSize.width;\n        me.height = minSize.height;\n    }\n    /**\n     * @return {?}\n     */\n    function draw() {\n        /** @type {?} */\n        var me = this;\n        /** @type {?} */\n        var opts = me.options;\n        /** @type {?} */\n        var labelOpts = opts.labels;\n        /** @type {?} */\n        var globalDefaults = defaults.global;\n        /** @type {?} */\n        var defaultColor = globalDefaults.defaultColor;\n        /** @type {?} */\n        var lineDefault = globalDefaults.elements.line;\n        /** @type {?} */\n        var legendHeight = me.height;\n        /** @type {?} */\n        var columnHeights = me.columnHeights;\n        /** @type {?} */\n        var columnWidths = me.columnWidths;\n        /** @type {?} */\n        var legendWidth = me.width;\n        /** @type {?} */\n        var lineWidths = me.lineWidths;\n        /** @type {?} */\n        var lineHeights = me.lineHeights;\n        if (opts.display) {\n            /** @type {?} */\n            var ctx = me.ctx;\n            /** @type {?} */\n            var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n            /** @type {?} */\n            var labelFont = helpers.options._parseFont(labelOpts);\n            /** @type {?} */\n            var fontSize = labelFont.size;\n            /** @type {?} */\n            var cursor;\n            // Canvas setup\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = fontColor; // for strikethrough effect\n            ctx.fillStyle = fontColor; // render in correct colour\n            ctx.font = labelFont.string;\n            /** @type {?} */\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            /** @type {?} */\n            var hitboxes = me.legendHitBoxes;\n            // current position\n            /** @type {?} */\n            var drawLegendBox = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} legendItem\n             * @return {?}\n             */\n            function (x, y, legendItem) {\n                if (isNaN(boxWidth) || boxWidth <= 0) {\n                    return;\n                }\n                // Set the ctx for the box\n                ctx.save();\n                /** @type {?} */\n                var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n                ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n                ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n                ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n                ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n                if (ctx.setLineDash) {\n                    // IE 9 and 10 do not support line dash\n                    ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n                }\n                if (opts.labels && opts.labels.usePointStyle) {\n                    // Recalculate x and y for drawPoint() because its expecting\n                    // x and y to be center of figure (instead of top left)\n                    /** @type {?} */\n                    var radius = boxWidth * Math.SQRT2 / 2;\n                    /** @type {?} */\n                    var centerX = x + boxWidth / 2;\n                    /** @type {?} */\n                    var centerY = y + fontSize / 2;\n                    // Draw pointStyle as legend symbol\n                    helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n                }\n                else {\n                    // Draw box as legend symbol\n                    if (lineWidth !== 0) {\n                        ctx.strokeRect(x, y, boxWidth, fontSize);\n                    }\n                    ctx.fillRect(x, y, boxWidth, fontSize);\n                }\n                ctx.restore();\n            });\n            /** @type {?} */\n            var drawStrikeThrough = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} w\n             * @return {?}\n             */\n            function (x, y, w) {\n                ctx.beginPath();\n                ctx.lineWidth = 2;\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + w, y);\n                ctx.stroke();\n            });\n            /** @type {?} */\n            var drawCrossOver = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} w\n             * @param {?} h\n             * @return {?}\n             */\n            function (x, y, w, h) {\n                ctx.beginPath();\n                ctx.lineWidth = 2;\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + w, y + h);\n                ctx.moveTo(x, y + h);\n                ctx.lineTo(x + w, y);\n                ctx.stroke();\n            });\n            /** @type {?} */\n            var fillText = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} legendItem\n             * @param {?} textWidth\n             * @return {?}\n             */\n            function (x, y, legendItem, textWidth) {\n                /** @type {?} */\n                var halfFontSize = fontSize / 2;\n                /** @type {?} */\n                var xLeft = boxWidth + halfFontSize + x;\n                /** @type {?} */\n                var yMiddle = y + halfFontSize;\n                if (helpers.isArray(legendItem.text)) {\n                    helpers.each(legendItem.text, (/**\n                     * @param {?} textLine\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    function (textLine, index) {\n                        /** @type {?} */\n                        var lineOffset = index * fontSize;\n                        ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n                    }));\n                }\n                else {\n                    ctx.fillText(legendItem.text, xLeft, yMiddle);\n                }\n                if (legendItem.hidden) {\n                    if (helpers.isArray(legendItem.text)) {\n                        drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n                    }\n                    else {\n                        drawStrikeThrough(xLeft, yMiddle, textWidth);\n                    }\n                }\n            });\n            /** @type {?} */\n            var alignmentOffset = (/**\n             * @param {?} dimension\n             * @param {?} blockSize\n             * @return {?}\n             */\n            function (dimension, blockSize) {\n                switch (opts.align) {\n                    case 'start':\n                        return labelOpts.padding;\n                    case 'end':\n                        return dimension - blockSize;\n                    default: // center\n                        return (dimension - blockSize + labelOpts.padding) / 2;\n                }\n            });\n            // Horizontal\n            /** @type {?} */\n            var isHorizontal = me.isHorizontal();\n            if (isHorizontal) {\n                cursor = {\n                    x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n                    y: me.top + labelOpts.padding,\n                    line: 0\n                };\n            }\n            else {\n                cursor = {\n                    x: me.left + labelOpts.padding,\n                    y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n                    line: 0\n                };\n            }\n            helpers.each(me.legendItems, (/**\n             * @param {?} legendItem\n             * @param {?} i\n             * @return {?}\n             */\n            function (legendItem, i) {\n                /** @type {?} */\n                var textWidth;\n                /** @type {?} */\n                var height;\n                /** @type {?} */\n                var boxTopOffset;\n                if (legendItem.lineOrColumnIndex > cursor.line) {\n                    if (isHorizontal) {\n                        cursor.y += lineHeights[cursor.line];\n                        cursor.line = legendItem.lineOrColumnIndex;\n                        cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n                    }\n                    else {\n                        cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n                        cursor.line = legendItem.lineOrColumnIndex;\n                        cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n                    }\n                }\n                if (helpers.isArray(legendItem.text)) {\n                    textWidth = legendItem.text.map((/**\n                     * @param {?} textLine\n                     * @return {?}\n                     */\n                    function (textLine) {\n                        return ctx.measureText(textLine).width;\n                    })).reduce((/**\n                     * @param {?} acc\n                     * @param {?} v\n                     * @return {?}\n                     */\n                    function (acc, v) {\n                        return v > acc ? v : acc;\n                    }), 0);\n                    boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n                    height = fontSize * legendItem.text.length;\n                }\n                else {\n                    textWidth = ctx.measureText(legendItem.text).width;\n                    boxTopOffset = 0;\n                    height = fontSize;\n                }\n                /** @type {?} */\n                var width = boxWidth + (fontSize / 2) + textWidth;\n                /** @type {?} */\n                var x = cursor.x;\n                /** @type {?} */\n                var y = cursor.y;\n                /** @type {?} */\n                var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n                drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n                hitboxes[i].left = x;\n                hitboxes[i].top = y;\n                // Fill the actual label\n                fillText(x, y + topOffset, legendItem, textWidth);\n                if (isHorizontal) {\n                    cursor.x += width + labelOpts.padding;\n                }\n                else {\n                    cursor.y += height + labelOpts.padding;\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n/**\n * @return {?}\n */\nfunction monkeyPatchChartJsTooltip() {\n    if (typeof Chart === 'undefined') {\n        console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n        return;\n    }\n    Chart.Tooltip.prototype.drawBody = drawBody;\n    /** @type {?} */\n    var helpers = Chart.helpers;\n    /**\n     * @param {?} vm\n     * @param {?} align\n     * @return {?}\n     */\n    function getAlignedX(vm, align) {\n        return align === 'center'\n            ? vm.x + vm.width / 2\n            : align === 'right'\n                ? vm.x + vm.width - vm.xPadding\n                : vm.x + vm.xPadding;\n    }\n    /**\n     * @param {?} pt\n     * @param {?} vm\n     * @param {?} ctx\n     * @return {?}\n     */\n    function drawBody(pt, vm, ctx) {\n        /** @type {?} */\n        var bodyFontSize = vm.bodyFontSize;\n        /** @type {?} */\n        var bodySpacing = vm.bodySpacing;\n        /** @type {?} */\n        var bodyAlign = vm._bodyAlign;\n        /** @type {?} */\n        var body = vm.body;\n        /** @type {?} */\n        var drawColorBoxes = vm.displayColors;\n        /** @type {?} */\n        var labelColors = vm.labelColors;\n        /** @type {?} */\n        var xLinePadding = 0;\n        /** @type {?} */\n        var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n        /** @type {?} */\n        var textColor;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'top';\n        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n        pt.x = getAlignedX(vm, bodyAlign);\n        // Before Body\n        /** @type {?} */\n        var fillLineOfText = (/**\n         * @param {?} line\n         * @return {?}\n         */\n        function (line) {\n            ctx.fillText(line, pt.x + xLinePadding, pt.y);\n            pt.y += bodyFontSize + bodySpacing;\n        });\n        // Before body lines\n        ctx.fillStyle = vm.bodyFontColor;\n        helpers.each(vm.beforeBody, fillLineOfText);\n        xLinePadding = drawColorBoxes && bodyAlign !== 'right'\n            ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n            : 0;\n        // Draw body lines now\n        helpers.each(body, (/**\n         * @param {?} bodyItem\n         * @param {?} i\n         * @return {?}\n         */\n        function (bodyItem, i) {\n            textColor = vm.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers.each(bodyItem.before, fillLineOfText);\n            // Draw Legend-like boxes if needed\n            if (drawColorBoxes) {\n                // Fill a white rect so that colours merge nicely if the opacity is < 1\n                ctx.fillStyle = vm.legendColorBackground;\n                ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                // Border\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = labelColors[i].borderColor;\n                ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                // Inner square\n                ctx.fillStyle = labelColors[i].backgroundColor;\n                ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n                ctx.fillStyle = textColor;\n            }\n            helpers.each(bodyItem.lines, fillLineOfText);\n            helpers.each(bodyItem.after, fillLineOfText);\n        }));\n        // Reset back to 0 for after body\n        xLinePadding = 0;\n        // After body lines\n        helpers.each(vm.afterBody, fillLineOfText);\n        pt.y -= bodySpacing; // Remove last body spacing\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BaseChartDirective, ChartsModule, ThemeService, defaultColors, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip };\n//# sourceMappingURL=ng2-charts.js.map\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<div [ngClass]=\\\"selectedTheme\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <div class=\\\"toolbar\\\">\\n      ng2-charts\\n      <button mat-button (click)=\\\"selectedTheme='ng2-charts-demo-dark-theme'\\\">Dark Theme</button>\\n      <button mat-button (click)=\\\"selectedTheme='ng2-charts-demo-light-theme'\\\">Light Theme</button>\\n    </div>\\n  </mat-toolbar>\\n  <main class=\\\"bd-pageheader\\\">\\n    <div class=\\\"container\\\">\\n      <img alt=\\\"\\\" src=\\\"http://www.chartjs.org/img/chartjs-logo.svg\\\"\\n           style=\\\"background: top center no-repeat;background-size: contain;\\\">\\n      <h1>ng2-charts</h1>\\n      <p>Angular2 directives for <a href=\\\"http://www.chartjs.org/\\\" style=\\\"color:white\\\">Chart.js</a></p>\\n      <a mat-button mat-raised-button color=\\\"primary\\\" href=\\\"https://github.com/valor-software/ng2-charts\\\">View on GitHub</a>\\n      <div class=\\\"badges\\\">\\n        <div class=\\\"badge\\\"><iframe frameborder=\\\"0\\\" height=\\\"20px\\\" scrolling=\\\"0\\\"\\n            src=\\\"https://ghbtns.com/github-btn.html?user=valor-software&amp;repo=ng2-charts&amp;type=star&amp;count=true\\\"\\n            width=\\\"170px\\\"></iframe></div>\\n        <div class=\\\"badge\\\"><iframe frameborder=\\\"0\\\" height=\\\"20px\\\" scrolling=\\\"0\\\"\\n            src=\\\"https://ghbtns.com/github-btn.html?user=valor-software&amp;repo=ng2-charts&amp;type=fork&amp;count=true\\\"\\n            width=\\\"170px\\\"></iframe></div>\\n      </div>\\n      <a target=\\\"_blank\\\" href=\\\"https://join.slack.com/t/ngx-home/shared_invite/enQtNTExMTY5MzcwMTM0LWQ5M2Y4OWM0OGJjNmZiOGYyNjFlZTdlOGI1YjcxYWQ2ODhiOTY4NzhiODgwMTIzNDczODIyNWNmM2RlYWRhNTg\\\">\\n        <img src=\\\"https://a.slack-edge.com/66f9/img/icons/ios-256.png\\\" width=\\\"25\\\" height=\\\"25\\\" alt=\\\"slack of ng2-charts\\\">\\n      </a>\\n      <a target=\\\"_blank\\\" href=\\\"https://stackoverflow.com/questions/tagged/ng2-charts\\\">\\n        <img src=\\\"https://cdn.sstatic.net/Sites/stackoverflow/company/img/logos/so/so-icon.svg\\\" width=\\\"25\\\" height=\\\"25\\\" alt=\\\"ng2-charts on stackoverflow\\\">\\n      </a>\\n      <a target=\\\"_blank\\\" href=\\\"https://github.com/valor-software/ng2-charts\\\">\\n        <img src=\\\"https://github.githubassets.com/favicon.ico\\\" width=\\\"25\\\" height=\\\"25\\\" alt=\\\"ng2-charts on github\\\">\\n      </a>\\n    </div>\\n  </main>\\n  <div class=\\\"section\\\">\\n    <mat-tab-group #tabGroup (selectedIndexChange)=\\\"updateRoute($event)\\\">\\n      <mat-tab #tab label=\\\"General Info\\\">\\n        <div class=\\\"section\\\">\\n          <h2>Installation</h2>\\n          <markdown ngPreserveWhitespaces>\\n            ### Installation\\n\\n            1. Install ***ng2-charts*** using npm\\n\\n            ```bash\\n            npm install --save ng2-charts\\n            ```\\n            2. Install ***Chart.js*** library\\n\\n            ```bash\\n            npm install --save chart.js\\n            ```\\n\\n          </markdown>\\n\\n          <h2>API</h2>\\n          <markdown ngPreserveWhitespaces>\\n            ### Usage\\n\\n            ```typescript\\n                import {{ '{' }} ChartsModule } from 'ng2-charts';\\n\\n                // In your App's module:\\n                imports: [\\n                  ChartsModule\\n                ]\\n            ```\\n\\n            ### Chart types\\n            There are one directive for all chart types: `baseChart`, and there are 8 types of charts: [`line`](/#/LineChart), [`bar`](/#/BarChart), [`radar`](/#/RadarChart), [`pie`](/#/PieChart), [`polarArea`](/#/PolarAreaChart), [`doughnut`](/#/DoughnutChart), [`bubble`](/#/BubbleChart) and [`scatter`](/#/ScatterChart).\\n\\n            ### Properties\\n\\n            **Note**: For more information about possible options please refer to original [chart.js](http://www.chartjs.org/docs) documentation\\n\\n            - `data` (`SingleOrMultiDataSet`) -  set of points of the chart, it should be `MultiDataSet` only for `line`, `bar`, `radar` and `doughnut`, otherwise `SingleDataSet`\\n            - `datasets` (`{{ '{' }}data: SingleDataSet, label: string}[]`) - `data` see about, the `label` for the dataset which appears in the legend and tooltips\\n            - `labels` (`Label[]`) - x axis labels. It's necessary for charts: `line`, `bar` and `radar`. And just labels (on hover) for charts: `polarArea`, `pie` and `doughnut`. `Label` is either a single `string`, or it may be a `string[]` representing a multi-line label where each array element is on a new line.\\n            - `chartType` (`ChartType`) - indicates the type of charts, it can be: `line`, `bar`, `radar`, `pie`, `polarArea`, `doughnut`\\n            - `options` (`ChartOptions`) - chart options (as from [Chart.js documentation](http://www.chartjs.org/docs/))\\n            - `colors` (`Color[]`) - data colors, will use default and|or random colors if not specified (see below)\\n            - `legend`: (`boolean = false`) - if true show legend below the chart, otherwise not be shown\\n\\n            ### Events\\n\\n            - `chartClick`: fires when click on a chart has occurred, returns information regarding active points and labels\\n            - `chartHover`: fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels\\n\\n\\n            ### Colors\\n\\n            There are a set several default colors. Colors can be replaced using the `colors` attribute. If there is more data than colors, colors are generated randomly.\\n\\n            ### Dynamic Theming\\n\\n              The `ChartsModule` provides a service called `ThemeService` which allows clients to set a structure specifying colors override settings. This service may be called when the dynamic theme changes, with colors which fit the theme. The structure is interpreted as an override, with special functionality when dealing with arrays. Example:\\n\\n              ```typescript\\n              type Theme = 'light-theme' | 'dark-theme';\\n\\n              private _selectedTheme: Theme = 'light-theme';\\n              public get selectedTheme() {{ '{' }}\\n                return this._selectedTheme;\\n              }\\n              public set selectedTheme(value) {{ '{' }}\\n                this._selectedTheme = value;\\n                let overrides: ChartOptions;\\n                if (this.selectedTheme === 'dark-theme') {{ '{' }}\\n                  overrides = {{ '{' }}\\n                    legend: {{ '{' }}\\n                      labels: {{ '{' }} fontColor: 'white' }\\n                    },\\n                    scales: {{ '{' }}\\n                      xAxes: [{{ '{' }}\\n                        ticks: {{ '{' }} fontColor: 'white' },\\n                        gridLines: {{ '{' }} color: 'rgba(255,255,255,0.1)' }\\n                      }],\\n                      yAxes: [{{ '{' }}\\n                        ticks: {{ '{' }} fontColor: 'white' },\\n                        gridLines: {{ '{' }} color: 'rgba(255,255,255,0.1)' }\\n                      }]\\n                    }\\n                  };\\n                } else {{ '{' }}\\n                  overrides = {{ '{' }}};\\n                }\\n                this.themeService.setColorschemesOptions(overrides);\\n              }\\n\\n              constructor(private themeService: ThemeService) {{ '{' }} }\\n\\n              setCurrentTheme(theme: Theme) {{ '{' }}\\n                this.selectedTheme = theme;\\n              }\\n              ```\\n\\n              The `overrides` object has the same type as the chart options object `ChartOptions`, and wherever a simple field is encountered it replaces the matching field in the `options` object. When an array is encountered (as in the `xAxes` and `yAxes` fields above), the single object inside the array is used as a template to override all array elements in the matching field in the `options` object. So in the case above, every axis will have its ticks and gridline colors changed.\\n\\n              ## Schematics\\n\\n              There are schematics that may be used to generate chart components using Angular CLI. The components are defined in package `ng2-charts-schematics`.\\n\\n              ### Installation of Schematics Package\\n\\n              ```bash\\n              npm install --save-dev ng2-charts-schematics\\n              ```\\n\\n              ### Example of Generating a Line Chart using Angular CLI\\n\\n              ```bash\\n              ng generate ng2-charts-schematics:line my-line-chart\\n              ```\\n\\n              This calls angular's component schematics and then modifies the result, so all the options for the component schematic are also usable here. This schematics will also add the `ChartsModule` as an imported module in the main app module (or another module as specified in the `--module` command switch).\\n              </markdown>\\n            </div>\\n\\n      </mat-tab>\\n      <mat-tab #tab label=\\\"Line Chart\\\"><app-chart-host chartType=\\\"line\\\"><app-line-chart #main></app-line-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Bar Chart\\\"><app-chart-host chartType=\\\"bar\\\"><app-bar-chart #main></app-bar-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Doughnut Chart\\\"><app-chart-host chartType=\\\"doughnut\\\"><app-doughnut-chart #main></app-doughnut-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Radar Chart\\\"><app-chart-host chartType=\\\"radar\\\"><app-radar-chart #main></app-radar-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Pie Chart\\\"><app-chart-host chartType=\\\"pie\\\"><app-pie-chart #main></app-pie-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Polar Area Chart\\\"><app-chart-host chartType=\\\"polar-area\\\"><app-polar-area-chart #main></app-polar-area-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Bubble Chart\\\"><app-chart-host chartType=\\\"bubble\\\"><app-bubble-chart #main></app-bubble-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Scatter Chart\\\"><app-chart-host chartType=\\\"scatter\\\"><app-scatter-chart #main></app-scatter-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Dynamic Chart\\\"><app-chart-host chartType=\\\"dynamic\\\"><app-dynamic-chart #main></app-dynamic-chart></app-chart-host></mat-tab>\\n      <mat-tab #tab label=\\\"Financial Chart\\\"><app-chart-host chartType=\\\"financial\\\"><app-financial-chart #main></app-financial-chart></app-chart-host></mat-tab>    </mat-tab-group>\\n  </div>\\n  <footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n      <p class=\\\"text-muted text-center\\\"><a href=\\\"https://github.com/valor-software/ng2-charts/graphs/contributors\\\">Contributors to ng2-charts</a></p>\\n    </div>\\n  </footer>\\n</div>\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [datasets]=\\\"barChartData\\\"\\n        [labels]=\\\"barChartLabels\\\"\\n        [options]=\\\"barChartOptions\\\"\\n        [plugins]=\\\"barChartPlugins\\\"\\n        [legend]=\\\"barChartLegend\\\"\\n        [chartType]=\\\"barChartType\\\">\\n      </canvas>\\n    </div>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"randomize()\\\">Update</button>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\\nimport { Label } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-bar-chart',\\n  templateUrl: './bar-chart.component.html',\\n  styleUrls: ['./bar-chart.component.scss'],\\n})\\nexport class BarChartComponent implements OnInit {\\n  public barChartOptions: ChartOptions = {\\n    responsive: true,\\n    // We use these empty structures as placeholders for dynamic theming.\\n    scales: { xAxes: [{}], yAxes: [{}] },\\n    plugins: {\\n      datalabels: {\\n        anchor: 'end',\\n        align: 'end',\\n      }\\n    }\\n  };\\n  public barChartLabels: Label[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\\n  public barChartType: ChartType = 'bar';\\n  public barChartLegend = true;\\n  public barChartPlugins = [pluginDataLabels];\\n\\n  public barChartData: ChartDataSets[] = [\\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\\n  ];\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public randomize(): void {\\n    // Only Change 3 values\\n    const data = [\\n      Math.round(Math.random() * 100),\\n      59,\\n      80,\\n      (Math.random() * 100),\\n      56,\\n      (Math.random() * 100),\\n      40];\\n    this.barChartData[0].data = data;\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [datasets]=\\\"bubbleChartData\\\"\\n        [options]=\\\"bubbleChartOptions\\\"\\n        [colors]=\\\"bubbleChartColors\\\"\\n        [legend]=\\\"bubbleChartLegend\\\"\\n        [chartType]=\\\"bubbleChartType\\\">\\n      </canvas>\\n    </div>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"randomize()\\\">Update</button>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\\nimport { Color } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-bubble-chart',\\n  templateUrl: './bubble-chart.component.html',\\n  styleUrls: ['./bubble-chart.component.scss']\\n})\\nexport class BubbleChartComponent implements OnInit {\\n  public bubbleChartOptions: ChartOptions = {\\n    responsive: true,\\n    scales: {\\n      xAxes: [\\n        {\\n          ticks: {\\n            min: 0,\\n            max: 30,\\n          }\\n        }\\n      ],\\n      yAxes: [\\n        {\\n          ticks: {\\n            min: 0,\\n            max: 30,\\n          }\\n        }\\n      ]\\n    }\\n  };\\n  public bubbleChartType: ChartType = 'bubble';\\n  public bubbleChartLegend = true;\\n\\n  public bubbleChartData: ChartDataSets[] = [\\n    {\\n      data: [\\n        { x: 10, y: 10, r: 10 },\\n        { x: 15, y: 5, r: 15 },\\n        { x: 26, y: 12, r: 23 },\\n        { x: 7, y: 8, r: 8 },\\n      ],\\n      label: 'Series A',\\n      backgroundColor: 'green',\\n      borderColor: 'blue',\\n      hoverBackgroundColor: 'purple',\\n      hoverBorderColor: 'red',\\n    },\\n  ];\\n\\n  public bubbleChartColors: Color[] = [\\n    {\\n      backgroundColor: [\\n        'red',\\n        'green',\\n        'blue',\\n        'purple',\\n        'yellow',\\n        'brown',\\n        'magenta',\\n        'cyan',\\n        'orange',\\n        'pink'\\n      ]\\n    }\\n  ];\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  private rand(max: number) {\\n    return Math.trunc(Math.random() * max);\\n  }\\n\\n  private randomPoint(maxCoordinate: number) {\\n    const x = this.rand(maxCoordinate);\\n    const y = this.rand(maxCoordinate);\\n    const r = this.rand(30) + 5;\\n    return { x, y, r };\\n  }\\n\\n  public randomize(): void {\\n    const numberOfPoints = this.rand(5) + 5;\\n    const data = Array.apply(null, { length: numberOfPoints }).map(r => this.randomPoint(30));\\n    this.bubbleChartData[0].data = data;\\n  }\\n}\\n\"","module.exports = \"<section style=\\\"padding-top: 50px;\\\">\\n  <div>\\n    <div>\\n      <h4>{{heading}}</h4>\\n    </div>\\n  </div>\\n  <div>\\n    <ng-content></ng-content>\\n  </div>\\n  <div>\\n    <div>\\n      <mat-tab-group>\\n        <mat-tab label=\\\"Markup\\\">\\n          <div class=\\\"card card-block panel panel-default panel-body\\\">\\n            <pre><code [highlight]=\\\"html\\\"></code></pre>\\n          </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"TypeScript\\\">\\n          <div class=\\\"card card-block panel panel-default panel-body\\\">\\n            <pre><code [highlight]=\\\"ts\\\"></code></pre>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [data]=\\\"doughnutChartData\\\"\\n        [labels]=\\\"doughnutChartLabels\\\"\\n        [chartType]=\\\"doughnutChartType\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartType } from 'chart.js';\\nimport { MultiDataSet, Label } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-doughnut-chart',\\n  templateUrl: './doughnut-chart.component.html',\\n  styleUrls: ['./doughnut-chart.component.scss']\\n})\\nexport class DoughnutChartComponent implements OnInit {\\n  // Doughnut\\n  public doughnutChartLabels: Label[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\\n  public doughnutChartData: MultiDataSet = [\\n    [350, 450, 100],\\n    [50, 150, 120],\\n    [250, 130, 70],\\n  ];\\n  public doughnutChartType: ChartType = 'doughnut';\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div>\\n      <div style=\\\"display: block\\\">\\n        <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\"\\n          [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\"\\n          (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n      </div>\\n      <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"randomize()\\\">Update</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\\nimport { Label } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-dynamic-chart',\\n  templateUrl: './dynamic-chart.component.html',\\n  styleUrls: ['./dynamic-chart.component.scss']\\n})\\nexport class DynamicChartComponent implements OnInit {\\n  public barChartOptions: ChartOptions = {\\n    responsive: true,\\n    // We use these empty structures as placeholders for dynamic theming.\\n    scales: { xAxes: [{}], yAxes: [{}] },\\n  };\\n  public barChartLabels: Label[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\\n  public barChartType: ChartType = 'bar';\\n  public barChartLegend = true;\\n\\n  public barChartData: ChartDataSets[] = [\\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\\n  ];\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public randomize(): void {\\n    this.barChartType = this.barChartType === 'bar' ? 'line' : 'bar';\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <markdown ngPreserveWhitespaces>\\n\\n    This chart demonstrates how custom chart types can be plugged into `ng2-charts`. Check out the Typescript source\\n    code below.\\n\\n    This custom chart type depends on a package called [`chartjs-chart-financial`](https://github.com/chartjs/chartjs-chart-financial)\\n    which is not yet on [npmjs.com](https://npmjs.com). It is included in the demo app as a git submodule directly from the github site of the package.\\n\\n    This also demonstrates using a different date/time adapter than [`moment`](https://www.npmjs.com/package/moment).\\n    This demo uses [`luxon`](https://www.npmjs.com/package/luxon) instead, plugged into the `chart.js` module using\\n    the [`chartjs-adapter-luxon`](https://www.npmjs.com/package/chartjs-adapter-luxon) package.\\n\\n    Developers who wish to run this locally must first clone the demo app, then run some npm commands:\\n\\n    ```bash\\n    git clone git@github.com:valor-software/ng2-charts.git\\n    npm install\\n    npm run install:financial\\n    npm run build:financial\\n    npm run build:lib\\n    ```\\n\\n    Then you may run `npm start` to run the demo app locally on http://localhost:4200\\n  </markdown>\\n</div>\\n<div class=\\\"chart\\\">\\n  <canvas baseChart [datasets]=\\\"financialChartData\\\" [options]=\\\"financialChartOptions\\\"\\n    [colors]=\\\"financialChartColors\\\" [legend]=\\\"financialChartLegend\\\" [chartType]=\\\"financialChartType\\\"\\n    [plugins]=\\\"financialChartPlugins\\\">\\n  </canvas>\\n</div>\\n<div>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"update()\\\">Toggle Chart Type</button>\\n</div>\\n\"","module.exports = \"import { Component, OnInit, ViewChild } from '@angular/core';\\nimport 'dist/chartjs-chart-financial/chartjs-chart-financial';\\nimport * as luxon from 'luxon';\\nimport 'chartjs-adapter-luxon';\\nimport { ChartOptions } from 'chart.js';\\nimport { Color, BaseChartDirective } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-financial-chart',\\n  templateUrl: './financial-chart.component.html',\\n  styleUrls: ['./financial-chart.component.css']\\n})\\nexport class FinancialChartComponent implements OnInit {\\n  barCount = 60;\\n  initialDateStr = '01 Apr 2017 00:00 Z';\\n\\n  public financialChartData = [\\n    {\\n      label: 'CHRT - Chart.js Corporation',\\n      data: this.getRandomData(this.initialDateStr, this.barCount)\\n    },\\n  ];\\n  public financialChartOptions: ChartOptions = {\\n    responsive: true,\\n    maintainAspectRatio: false,\\n  };\\n  public financialChartColors: Color[] = [\\n    {\\n      borderColor: 'black',\\n      backgroundColor: 'rgba(255,0,0,0.3)',\\n    },\\n  ];\\n  public financialChartLegend = true;\\n  public financialChartType = 'candlestick';\\n  public financialChartPlugins = [];\\n\\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  randomNumber(min: number, max: number) {\\n    return Math.random() * (max - min) + min;\\n  }\\n\\n  randomBar(date: luxon.DateTime, lastClose: number) {\\n    const open = this.randomNumber(lastClose * 0.95, lastClose * 1.05);\\n    const close = this.randomNumber(open * 0.95, open * 1.05);\\n    const high = this.randomNumber(Math.max(open, close), Math.max(open, close) * 1.1);\\n    const low = this.randomNumber(Math.min(open, close) * 0.9, Math.min(open, close));\\n    return {\\n      t: date.valueOf(),\\n      o: open,\\n      h: high,\\n      l: low,\\n      c: close\\n    };\\n  }\\n\\n  getRandomData(dateStr: string, count: number) {\\n    let date = luxon.DateTime.fromRFC2822(dateStr);\\n    const data = [this.randomBar(date, 30)];\\n    while (data.length < count) {\\n      date = date.plus({ days: 1 });\\n      if (date.weekday <= 5) {\\n        data.push(this.randomBar(date, data[data.length - 1].c));\\n      }\\n    }\\n    return data;\\n  }\\n\\n  update() {\\n    // candlestick vs ohlc\\n    this.financialChartType = this.financialChartType === 'candlestick' ? 'ohlc' : 'candlestick';\\n  }\\n}\\n\"","module.exports = \"<div class=\\\"flex\\\">\\n  <div class=\\\"flex-item\\\">\\n    <div style=\\\"display: block;\\\">\\n    <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [legend]=\\\"lineChartLegend\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                [plugins]=\\\"lineChartPlugins\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n    </div>\\n  </div>\\n  <div class=\\\"flex-item\\\">\\n    <table class=\\\"table table-responsive table-condensed\\\">\\n      <tr>\\n        <th *ngFor=\\\"let label of lineChartLabels\\\">{{label}}</th>\\n      </tr>\\n      <tr *ngFor=\\\"let d of lineChartData; let i=index\\\" [class]=\\\"'line-'+i\\\">\\n        <td *ngFor=\\\"let label of lineChartLabels; let j=index\\\">{{d && d.data[j]}}</td>\\n      </tr>\\n    </table>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"randomize()\\\">Randomize</button>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"pushOne()\\\">Push</button>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeColor()\\\">Recolor</button>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"hideOne()\\\">Toggle Series B</button>\\n    <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeLabel()\\\">Change Label</button>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit, ViewChild } from '@angular/core';\\nimport { ChartDataSets, ChartOptions } from 'chart.js';\\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\\n\\n@Component({\\n  selector: 'app-line-chart',\\n  templateUrl: './line-chart.component.html',\\n  styleUrls: ['./line-chart.component.scss']\\n})\\nexport class LineChartComponent implements OnInit {\\n  public lineChartData: ChartDataSets[] = [\\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\\n    { data: [180, 480, 770, 90, 1000, 270, 400], label: 'Series C', yAxisID: 'y-axis-1' }\\n  ];\\n  public lineChartLabels: Label[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\\n    responsive: true,\\n    scales: {\\n      // We use this empty structure as a placeholder for dynamic theming.\\n      xAxes: [{}],\\n      yAxes: [\\n        {\\n          id: 'y-axis-0',\\n          position: 'left',\\n        },\\n        {\\n          id: 'y-axis-1',\\n          position: 'right',\\n          gridLines: {\\n            color: 'rgba(255,0,0,0.3)',\\n          },\\n          ticks: {\\n            fontColor: 'red',\\n          }\\n        }\\n      ]\\n    },\\n    annotation: {\\n      annotations: [\\n        {\\n          type: 'line',\\n          mode: 'vertical',\\n          scaleID: 'x-axis-0',\\n          value: 'March',\\n          borderColor: 'orange',\\n          borderWidth: 2,\\n          label: {\\n            enabled: true,\\n            fontColor: 'orange',\\n            content: 'LineAnno'\\n          }\\n        },\\n      ],\\n    },\\n  };\\n  public lineChartColors: Color[] = [\\n    { // grey\\n      backgroundColor: 'rgba(148,159,177,0.2)',\\n      borderColor: 'rgba(148,159,177,1)',\\n      pointBackgroundColor: 'rgba(148,159,177,1)',\\n      pointBorderColor: '#fff',\\n      pointHoverBackgroundColor: '#fff',\\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\\n    },\\n    { // dark grey\\n      backgroundColor: 'rgba(77,83,96,0.2)',\\n      borderColor: 'rgba(77,83,96,1)',\\n      pointBackgroundColor: 'rgba(77,83,96,1)',\\n      pointBorderColor: '#fff',\\n      pointHoverBackgroundColor: '#fff',\\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\\n    },\\n    { // red\\n      backgroundColor: 'rgba(255,0,0,0.3)',\\n      borderColor: 'red',\\n      pointBackgroundColor: 'rgba(148,159,177,1)',\\n      pointBorderColor: '#fff',\\n      pointHoverBackgroundColor: '#fff',\\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\\n    }\\n  ];\\n  public lineChartLegend = true;\\n  public lineChartType = 'line';\\n  public lineChartPlugins = [pluginAnnotations];\\n\\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  public randomize(): void {\\n    for (let i = 0; i < this.lineChartData.length; i++) {\\n      for (let j = 0; j < this.lineChartData[i].data.length; j++) {\\n        this.lineChartData[i].data[j] = this.generateNumber(i);\\n      }\\n    }\\n    this.chart.update();\\n  }\\n\\n  private generateNumber(i: number) {\\n    return Math.floor((Math.random() * (i < 2 ? 100 : 1000)) + 1);\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public hideOne() {\\n    const isHidden = this.chart.isDatasetHidden(1);\\n    this.chart.hideDataset(1, !isHidden);\\n  }\\n\\n  public pushOne() {\\n    this.lineChartData.forEach((x, i) => {\\n      const num = this.generateNumber(i);\\n      const data: number[] = x.data as number[];\\n      data.push(num);\\n    });\\n    this.lineChartLabels.push(`Label ${this.lineChartLabels.length}`);\\n  }\\n\\n  public changeColor() {\\n    this.lineChartColors[2].borderColor = 'green';\\n    this.lineChartColors[2].backgroundColor = `rgba(0, 255, 0, 0.3)`;\\n  }\\n\\n  public changeLabel() {\\n    this.lineChartLabels[2] = ['1st Line', '2nd Line'];\\n    // this.chart.update();\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div class=\\\"chart\\\">\\n      <canvas baseChart\\n        [data]=\\\"pieChartData\\\"\\n        [labels]=\\\"pieChartLabels\\\"\\n        [chartType]=\\\"pieChartType\\\"\\n        [options]=\\\"pieChartOptions\\\"\\n        [plugins]=\\\"pieChartPlugins\\\"\\n        [colors]=\\\"pieChartColors\\\"\\n        [legend]=\\\"pieChartLegend\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n<div>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"pieChartLegend=!pieChartLegend\\\">Toggle Legend</button>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeLabels()\\\">Change Labels</button>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"addSlice()\\\">Add Slice</button>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"removeSlice()\\\">Remove Slice</button>\\n  <button mat-button mat-raised-button color=\\\"primary\\\" (click)=\\\"changeLegendPosition()\\\">Change Legend Position</button>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartType, ChartOptions } from 'chart.js';\\nimport { Label } from 'ng2-charts';\\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\\n\\n@Component({\\n  selector: 'app-pie-chart',\\n  templateUrl: './pie-chart.component.html',\\n  styleUrls: ['./pie-chart.component.scss']\\n})\\nexport class PieChartComponent implements OnInit {\\n  // Pie\\n  public pieChartOptions: ChartOptions = {\\n    responsive: true,\\n    legend: {\\n      position: 'top',\\n    },\\n    plugins: {\\n      datalabels: {\\n        formatter: (value, ctx) => {\\n          const label = ctx.chart.data.labels[ctx.dataIndex];\\n          return label;\\n        },\\n      },\\n    }\\n  };\\n  public pieChartLabels: Label[] = [['Download', 'Sales'], ['In', 'Store', 'Sales'], 'Mail Sales'];\\n  public pieChartData: number[] = [300, 500, 100];\\n  public pieChartType: ChartType = 'pie';\\n  public pieChartLegend = true;\\n  public pieChartPlugins = [pluginDataLabels];\\n  public pieChartColors = [\\n    {\\n      backgroundColor: ['rgba(255,0,0,0.3)', 'rgba(0,255,0,0.3)', 'rgba(0,0,255,0.3)'],\\n    },\\n  ];\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  changeLabels() {\\n    const words = ['hen', 'variable', 'embryo', 'instal', 'pleasant', 'physical', 'bomber', 'army', 'add', 'film',\\n      'conductor', 'comfortable', 'flourish', 'establish', 'circumstance', 'chimney', 'crack', 'hall', 'energy',\\n      'treat', 'window', 'shareholder', 'division', 'disk', 'temptation', 'chord', 'left', 'hospital', 'beef',\\n      'patrol', 'satisfied', 'academy', 'acceptance', 'ivory', 'aquarium', 'building', 'store', 'replace', 'language',\\n      'redeem', 'honest', 'intention', 'silk', 'opera', 'sleep', 'innocent', 'ignore', 'suite', 'applaud', 'funny'];\\n    const randomWord = () => words[Math.trunc(Math.random() * words.length)];\\n    this.pieChartLabels = Array.apply(null, { length: 3 }).map(_ => randomWord());\\n  }\\n\\n  addSlice() {\\n    this.pieChartLabels.push(['Line 1', 'Line 2', 'Line 3']);\\n    this.pieChartData.push(400);\\n    this.pieChartColors[0].backgroundColor.push('rgba(196,79,244,0.3)');\\n  }\\n\\n  removeSlice() {\\n    this.pieChartLabels.pop();\\n    this.pieChartData.pop();\\n    this.pieChartColors[0].backgroundColor.pop();\\n  }\\n\\n  changeLegendPosition() {\\n    this.pieChartOptions.legend.position = this.pieChartOptions.legend.position === 'left' ? 'top' : 'left';\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [data]=\\\"polarAreaChartData\\\"\\n        [labels]=\\\"polarAreaChartLabels\\\"\\n        [legend]=\\\"polarAreaLegend\\\"\\n        [chartType]=\\\"polarAreaChartType\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { SingleDataSet, Label } from 'ng2-charts';\\nimport { ChartType } from 'chart.js';\\n\\n@Component({\\n  selector: 'app-polar-area-chart',\\n  templateUrl: './polar-area-chart.component.html',\\n  styleUrls: ['./polar-area-chart.component.scss']\\n})\\nexport class PolarAreaChartComponent implements OnInit {\\n  // PolarArea\\n  public polarAreaChartLabels: Label[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\\n  public polarAreaChartData: SingleDataSet = [300, 500, 100, 40, 120];\\n  public polarAreaLegend = true;\\n\\n  public polarAreaChartType: ChartType = 'polarArea';\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [datasets]=\\\"radarChartData\\\"\\n        [options]=\\\"radarChartOptions\\\"\\n        [labels]=\\\"radarChartLabels\\\"\\n        [chartType]=\\\"radarChartType\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartDataSets, ChartType, RadialChartOptions } from 'chart.js';\\nimport { Label } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-radar-chart',\\n  templateUrl: './radar-chart.component.html',\\n  styleUrls: ['./radar-chart.component.scss']\\n})\\nexport class RadarChartComponent implements OnInit {\\n  // Radar\\n  public radarChartOptions: RadialChartOptions = {\\n    responsive: true,\\n  };\\n  public radarChartLabels: Label[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\\n\\n  public radarChartData: ChartDataSets[] = [\\n    { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\\n    { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\\n  ];\\n  public radarChartType: ChartType = 'radar';\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n}\\n\"","module.exports = \"<div>\\n  <div>\\n    <div style=\\\"display: block\\\">\\n      <canvas baseChart\\n        [datasets]=\\\"scatterChartData\\\"\\n        [options]=\\\"scatterChartOptions\\\"\\n        [labels]=\\\"scatterChartLabels\\\"\\n        [chartType]=\\\"scatterChartType\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"import { Component, OnInit } from '@angular/core';\\nimport { ChartDataSets, ChartType, ChartOptions } from 'chart.js';\\nimport { Label } from 'ng2-charts';\\n\\n@Component({\\n  selector: 'app-scatter-chart',\\n  templateUrl: './scatter-chart.component.html',\\n  styleUrls: ['./scatter-chart.component.scss']\\n})\\nexport class ScatterChartComponent implements OnInit {\\n  // scatter\\n  public scatterChartOptions: ChartOptions = {\\n    responsive: true,\\n  };\\n  public scatterChartLabels: Label[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\\n\\n  public scatterChartData: ChartDataSets[] = [\\n    {\\n      data: [\\n        { x: 1, y: 1 },\\n        { x: 2, y: 3 },\\n        { x: 3, y: -2 },\\n        { x: 4, y: 4 },\\n        { x: 5, y: -3 },\\n      ],\\n      label: 'Series A',\\n      pointRadius: 10,\\n    },\\n  ];\\n  public scatterChartType: ChartType = 'scatter';\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n  // events\\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n\\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\\n    console.log(event, active);\\n  }\\n}\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"mat-toolbar {\\n  position: fixed;\\n  top: 0;\\n  z-index: 9999;\\n}\\nmat-toolbar .toolbar {\\n  width: 1170px;\\n  margin: auto;\\n}\\n.badges .badge {\\n  display: inline-block;\\n  width: 100px;\\n}\\nfooter .text-center {\\n  text-align: center;\\n}\\nfooter p {\\n  margin-bottom: 10px;\\n}\\n.container {\\n  width: 1170px;\\n  margin: auto;\\n}\\n.container p {\\n  margin-top: 0;\\n}\\n.container h1 {\\n  margin-bottom: 0;\\n  font-size: 60;\\n  font-weight: 500;\\n}\\n.outer-container {\\n  width: calc(100% - 100px);\\n  margin: auto;\\n}\\n.section {\\n  width: 1170px;\\n  margin: auto;\\n}\\napp-chart-host {\\n  width: 100%;\\n}\\n.bd-pageheader {\\n  margin-top: 51px;\\n}\\n.bd-pageheader,\\n.bs-docs-masthead {\\n  padding: 30px 0;\\n  color: #cdbfe3;\\n  text-align: center;\\n  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);\\n  background-color: #6f5499;\\n  background-image: linear-gradient(to bottom, #563d7c 0, #6f5499 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#563d7c\\\", endColorstr=\\\"#6F5499\\\", GradientType=0);\\n  background-repeat: repeat-x;\\n}\\n.bd-pageheader {\\n  margin-bottom: 40px;\\n  font-size: 20px;\\n}\\n.bd-pageheader h1 {\\n  margin-top: 0;\\n  color: #fff;\\n}\\n.bd-pageheader p {\\n  margin-bottom: 0;\\n  font-weight: 300;\\n  line-height: 1.4;\\n}\\n.bd-pageheader .btn {\\n  margin: 10px 0;\\n}\\n@media (min-width: 992px) {\\n  .bd-pageheader h1,\\n.bd-pageheader p {\\n    margin-right: 380px;\\n  }\\n}\\n@media (min-width: 768px) {\\n  .bd-pageheader {\\n    font-size: 24px;\\n    text-align: left;\\n  }\\n\\n  .bd-pageheader h1 {\\n    font-size: 60px;\\n    line-height: 1;\\n  }\\n}\\n@media (max-width: 640px) {\\n  .container {\\n    width: 570px;\\n  }\\n\\n  .section {\\n    width: 570px;\\n  }\\n}\\n@media (max-width: 360px) {\\n  .container {\\n    width: 320px;\\n  }\\n\\n  .section {\\n    width: 320px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzL1dlYnN0b3JtUHJvamVjdHMvZm9yay1uZzItY2hhcnRzL25nMi1jaGFydHMvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxNQUFBO0VBQ0EsYUFBQTtBQ0NGO0FEQUU7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQ0VKO0FER0U7RUFDRSxxQkFBQTtFQUNBLFlBQUE7QUNBSjtBREtFO0VBQ0Usa0JBQUE7QUNGSjtBRElFO0VBQ0UsbUJBQUE7QUNGSjtBRE1BO0VBQ0UsYUFBQTtFQUNBLFlBQUE7QUNIRjtBRElFO0VBQ0UsYUFBQTtBQ0ZKO0FESUU7RUFDRSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0ZKO0FETUE7RUFDRSx5QkFBQTtFQUNBLFlBQUE7QUNIRjtBRE1BO0VBQ0UsYUFBQTtFQUNBLFlBQUE7QUNIRjtBRE1BO0VBQ0UsV0FBQTtBQ0hGO0FETUE7RUFDRSxnQkFBQTtBQ0hGO0FETUE7O0VBR0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHVDQUFBO0VBQ0EseUJBQUE7RUFJQSxxRUFBQTtFQUNBLGtIQUFBO0VBQ0EsMkJBQUE7QUNKRjtBRE9BO0VBQ0UsbUJBQUE7RUFDQSxlQUFBO0FDSkY7QURPQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0FDSkY7QURPQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0pGO0FET0E7RUFDRSxjQUFBO0FDSkY7QURPQTtFQUNFOztJQUVFLG1CQUFBO0VDSkY7QUFDRjtBRE9BO0VBQ0U7SUFDRSxlQUFBO0lBQ0EsZ0JBQUE7RUNMRjs7RURPQTtJQUNFLGVBQUE7SUFDQSxjQUFBO0VDSkY7QUFDRjtBRE9BO0VBQ0U7SUFDRSxZQUFBO0VDTEY7O0VET0E7SUFDRSxZQUFBO0VDSkY7QUFDRjtBRE9BO0VBQ0U7SUFDRSxZQUFBO0VDTEY7O0VET0E7SUFDRSxZQUFBO0VDSkY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC10b29sYmFyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDk5OTk7XG4gIC50b29sYmFyIHtcbiAgICB3aWR0aDogMTE3MHB4O1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxufVxuXG4uYmFkZ2VzIHtcbiAgLmJhZGdlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDEwMHB4O1xuICB9XG59XG5cbmZvb3RlciB7XG4gIC50ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cbn1cblxuLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMTcwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICBoMSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBmb250LXNpemU6IDYwO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbn1cblxuLm91dGVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAxMDBweCk7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnNlY3Rpb24ge1xuICB3aWR0aDogMTE3MHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbmFwcC1jaGFydC1ob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5iZC1wYWdlaGVhZGVyIHtcbiAgbWFyZ2luLXRvcDogNTFweDtcbn1cblxuLmJkLXBhZ2VoZWFkZXIsXG4uYnMtZG9jcy1tYXN0aGVhZCB7XG4gIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMzBweCAwO1xuICBjb2xvcjogI2NkYmZlMztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXNoYWRvdzogMCAxcHggMCByZ2JhKDAsIDAsIDAsIC4xKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZmNTQ5OTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjNTYzZDdjKSwgdG8oIzZmNTQ5OSkpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICM1NjNkN2MgMCwgIzZmNTQ5OSAxMDAlKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzU2M2Q3YyAwLCAjNmY1NDk5IDEwMCUpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNTYzZDdjIDAsICM2ZjU0OTkgMTAwJSk7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyM1NjNkN2MnLCBlbmRDb2xvcnN0cj0nIzZGNTQ5OScsIEdyYWRpZW50VHlwZT0wKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xufVxuXG4uYmQtcGFnZWhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmJkLXBhZ2VoZWFkZXIgaDEge1xuICBtYXJnaW4tdG9wOiAwO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJkLXBhZ2VoZWFkZXIgcCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbi5iZC1wYWdlaGVhZGVyIC5idG4ge1xuICBtYXJnaW46IDEwcHggMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5iZC1wYWdlaGVhZGVyIGgxLFxuICAuYmQtcGFnZWhlYWRlciBwIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDM4MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmQtcGFnZWhlYWRlciB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbiAgLmJkLXBhZ2VoZWFkZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDU3MHB4O1xuICB9XG4gIC5zZWN0aW9uIHtcbiAgICB3aWR0aDogNTcwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHdpZHRoOiAzMjBweDtcbiAgfVxuICAuc2VjdGlvbiB7XG4gICAgd2lkdGg6IDMyMHB4O1xuICB9XG59XG4iLCJtYXQtdG9vbGJhciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiA5OTk5O1xufVxubWF0LXRvb2xiYXIgLnRvb2xiYXIge1xuICB3aWR0aDogMTE3MHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5iYWRnZXMgLmJhZGdlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwcHg7XG59XG5cbmZvb3RlciAudGV4dC1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5mb290ZXIgcCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTE3MHB4O1xuICBtYXJnaW46IGF1dG87XG59XG4uY29udGFpbmVyIHAge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLmNvbnRhaW5lciBoMSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGZvbnQtc2l6ZTogNjA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5vdXRlci1jb250YWluZXIge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMTAwcHgpO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5zZWN0aW9uIHtcbiAgd2lkdGg6IDExNzBweDtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG5hcHAtY2hhcnQtaG9zdCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYmQtcGFnZWhlYWRlciB7XG4gIG1hcmdpbi10b3A6IDUxcHg7XG59XG5cbi5iZC1wYWdlaGVhZGVyLFxuLmJzLWRvY3MtbWFzdGhlYWQge1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIGNvbG9yOiAjY2RiZmUzO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtc2hhZG93OiAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZmNTQ5OTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjNTYzZDdjKSwgdG8oIzZmNTQ5OSkpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICM1NjNkN2MgMCwgIzZmNTQ5OSAxMDAlKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzU2M2Q3YyAwLCAjNmY1NDk5IDEwMCUpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNTYzZDdjIDAsICM2ZjU0OTkgMTAwJSk7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9XCIjNTYzZDdjXCIsIGVuZENvbG9yc3RyPVwiIzZGNTQ5OVwiLCBHcmFkaWVudFR5cGU9MCk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbn1cblxuLmJkLXBhZ2VoZWFkZXIge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5iZC1wYWdlaGVhZGVyIGgxIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5iZC1wYWdlaGVhZGVyIHAge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuXG4uYmQtcGFnZWhlYWRlciAuYnRuIHtcbiAgbWFyZ2luOiAxMHB4IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuYmQtcGFnZWhlYWRlciBoMSxcbi5iZC1wYWdlaGVhZGVyIHAge1xuICAgIG1hcmdpbi1yaWdodDogMzgwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmQtcGFnZWhlYWRlciB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cblxuICAuYmQtcGFnZWhlYWRlciBoMSB7XG4gICAgZm9udC1zaXplOiA2MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDU3MHB4O1xuICB9XG5cbiAgLnNlY3Rpb24ge1xuICAgIHdpZHRoOiA1NzBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHdpZHRoOiAzMjBweDtcbiAgfVxuXG4gIC5zZWN0aW9uIHtcbiAgICB3aWR0aDogMzIwcHg7XG4gIH1cbn0iXX0= */\"","import {\n  Component,\n  OnInit,\n  Inject,\n  Renderer2,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ThemeService } from 'ng2-charts';\nimport { ChartOptions } from 'chart.js';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTabGroup } from '@angular/material/tabs';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy, AfterViewInit {\n  private _selectedTheme = 'lala';\n  public get selectedTheme() {\n    return this._selectedTheme;\n  }\n  public set selectedTheme(value) {\n    this.renderer.removeClass(this.document.body, this._selectedTheme);\n    this._selectedTheme = value;\n    this.renderer.addClass(this.document.body, value);\n    let overrides: ChartOptions;\n    if (this.selectedTheme === 'ng2-charts-demo-light-theme') {\n      overrides = {};\n    } else {\n      overrides = {\n        legend: {\n          labels: {\n            fontColor: 'white',\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                fontColor: 'white',\n              },\n              gridLines: {\n                color: 'rgba(255,255,255,0.1)'\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                fontColor: 'white',\n              },\n              gridLines: {\n                color: 'rgba(255,255,255,0.1)'\n              }\n            }\n          ]\n        },\n        plugins: {\n          datalabels: {\n            color: 'white',\n          }\n        }\n      };\n    }\n    this.themeService.setColorschemesOptions(overrides);\n  }\n\n  @ViewChild('tabGroup', { static: true }) tabGroup: MatTabGroup;\n  @ViewChildren('tab', { read: ElementRef }) tabElements: QueryList<ElementRef>;\n  tabLabels: string[];\n\n  subs: Subscription[] = [];\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private themeService: ThemeService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {\n    this.selectedTheme = 'ng2-charts-demo-light-theme';\n  }\n\n  ngOnInit() {\n    this.subs.push(\n      this.route.fragment.subscribe(tabUrl => {\n        if (this.tabElements) {\n          const index = this.tabLabels.indexOf(tabUrl.slice(1));\n          if (index !== -1) {\n            this.tabGroup.selectedIndex = index;\n          }\n        }\n      }));\n  }\n\n  ngAfterViewInit(): void {\n    this.tabLabels = this.tabElements.map(r => r.nativeElement.getAttribute('label').replace(/ /g, ''));\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  updateRoute(index: number) {\n    const label = this.tabLabels[index];\n    this.router.navigate([], { fragment: `/${label}` });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {\n  ChartsModule,\n  BaseChartDirective,\n  monkeyPatchChartJsLegend,\n  monkeyPatchChartJsTooltip\n} from 'ng2-charts';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { DoughnutChartComponent } from './doughnut-chart/doughnut-chart.component';\nimport { RadarChartComponent } from './radar-chart/radar-chart.component';\nimport { PieChartComponent } from './pie-chart/pie-chart.component';\nimport { PolarAreaChartComponent } from './polar-area-chart/polar-area-chart.component';\nimport { DynamicChartComponent } from './dynamic-chart/dynamic-chart.component';\nimport { ChartHostComponent } from './chart-host/chart-host.component';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport xml from 'highlight.js/lib/languages/xml';\nimport { BubbleChartComponent } from './bubble-chart/bubble-chart.component';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { ScatterChartComponent } from './scatter-chart/scatter-chart.component';\nimport { FinancialChartComponent } from './financial-chart/financial-chart.component';\n\nconst routes: Route[] = [];\n\nexport function hljsLanguages() {\n  return [\n    { name: 'typescript', func: typescript },\n    // { name: 'html', func: html },\n    // {name: 'scss', func: scss},\n    { name: 'xml', func: xml }\n  ];\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LineChartComponent,\n    BarChartComponent,\n    DoughnutChartComponent,\n    RadarChartComponent,\n    PieChartComponent,\n    PolarAreaChartComponent,\n    DynamicChartComponent,\n    ChartHostComponent,\n    BubbleChartComponent,\n    ScatterChartComponent,\n    FinancialChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    ChartsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    HighlightModule.forRoot({\n      languages: hljsLanguages,\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {\n    BaseChartDirective.unregisterPlugin(pluginDataLabels);\n    monkeyPatchChartJsLegend();\n    monkeyPatchChartJsTooltip();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss'],\n})\nexport class BarChartComponent implements OnInit {\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartPlugins = [pluginDataLabels];\n\n  public barChartData: ChartDataSets[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public randomize(): void {\n    // Only Change 3 values\n    const data = [\n      Math.round(Math.random() * 100),\n      59,\n      80,\n      (Math.random() * 100),\n      56,\n      (Math.random() * 100),\n      40];\n    this.barChartData[0].data = data;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1YmJsZS1jaGFydC9idWJibGUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Color } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bubble-chart',\n  templateUrl: './bubble-chart.component.html',\n  styleUrls: ['./bubble-chart.component.scss']\n})\nexport class BubbleChartComponent implements OnInit {\n  public bubbleChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 30,\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 30,\n          }\n        }\n      ]\n    }\n  };\n  public bubbleChartType: ChartType = 'bubble';\n  public bubbleChartLegend = true;\n\n  public bubbleChartData: ChartDataSets[] = [\n    {\n      data: [\n        { x: 10, y: 10, r: 10 },\n        { x: 15, y: 5, r: 15 },\n        { x: 26, y: 12, r: 23 },\n        { x: 7, y: 8, r: 8 },\n      ],\n      label: 'Series A',\n      backgroundColor: 'green',\n      borderColor: 'blue',\n      hoverBackgroundColor: 'purple',\n      hoverBorderColor: 'red',\n    },\n  ];\n\n  public bubbleChartColors: Color[] = [\n    {\n      backgroundColor: [\n        'red',\n        'green',\n        'blue',\n        'purple',\n        'yellow',\n        'brown',\n        'magenta',\n        'cyan',\n        'orange',\n        'pink'\n      ]\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  private rand(max: number) {\n    return Math.trunc(Math.random() * max);\n  }\n\n  private randomPoint(maxCoordinate: number) {\n    const x = this.rand(maxCoordinate);\n    const y = this.rand(maxCoordinate);\n    const r = this.rand(30) + 5;\n    return { x, y, r };\n  }\n\n  public randomize(): void {\n    const numberOfPoints = this.rand(5) + 5;\n    const data = Array.apply(null, { length: numberOfPoints }).map(r => this.randomPoint(30));\n    this.bubbleChartData[0].data = data;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0LWhvc3QvY2hhcnQtaG9zdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ContentChild, AfterContentInit, Input } from '@angular/core';\n\nexport const chartTypes = {\n  bar: {\n    heading: 'Bar Chart',\n    ts: require('!!raw-loader!../bar-chart/bar-chart.component.ts'),\n    html: require('!!raw-loader!../bar-chart/bar-chart.component.html'),\n  },\n  doughnut: {\n    heading: 'Doughnut Chart',\n    ts: require('!!raw-loader!../doughnut-chart/doughnut-chart.component.ts'),\n    html: require('!!raw-loader!../doughnut-chart/doughnut-chart.component.html'),\n  },\n  dynamic: {\n    heading: 'Dynamic Chart',\n    ts: require('!!raw-loader!../dynamic-chart/dynamic-chart.component.ts'),\n    html: require('!!raw-loader!../dynamic-chart/dynamic-chart.component.html'),\n  },\n  line: {\n    heading: 'Line Chart',\n    ts: require('!!raw-loader!../line-chart/line-chart.component.ts'),\n    html: require('!!raw-loader!../line-chart/line-chart.component.html'),\n  },\n  pie: {\n    heading: 'Pie Chart',\n    ts: require('!!raw-loader!../pie-chart/pie-chart.component.ts'),\n    html: require('!!raw-loader!../pie-chart/pie-chart.component.html'),\n  },\n  'polar-area': {\n    heading: 'Polar Area Chart',\n    ts: require('!!raw-loader!../polar-area-chart/polar-area-chart.component.ts'),\n    html: require('!!raw-loader!../polar-area-chart/polar-area-chart.component.html'),\n  },\n  bubble: {\n    heading: 'Bubble Chart',\n    ts: require('!!raw-loader!../bubble-chart/bubble-chart.component.ts'),\n    html: require('!!raw-loader!../bubble-chart/bubble-chart.component.html'),\n  },\n  radar: {\n    heading: 'Radar Chart',\n    ts: require('!!raw-loader!../radar-chart/radar-chart.component.ts'),\n    html: require('!!raw-loader!../radar-chart/radar-chart.component.html'),\n  },\n  scatter: {\n    heading: 'Scatter Chart',\n    ts: require('!!raw-loader!../scatter-chart/scatter-chart.component.ts'),\n    html: require('!!raw-loader!../scatter-chart/scatter-chart.component.html'),\n  },\n  financial: {\n    heading: 'Financial Chart',\n    ts: require('!!raw-loader!../financial-chart/financial-chart.component.ts'),\n    html: require('!!raw-loader!../financial-chart/financial-chart.component.html'),\n  },\n};\n\n\n@Component({\n  selector: 'app-chart-host',\n  templateUrl: './chart-host.component.html',\n  styleUrls: ['./chart-host.component.scss']\n})\nexport class ChartHostComponent implements OnInit, AfterContentInit {\n  @Input() chartType: string;\n  @ContentChild('main', { static: true }) content;\n\n  html: string;\n  ts: string;\n  heading: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  ngAfterContentInit(): void {\n    const compName = this.chartType;\n    if (chartTypes[compName]) {\n      this.heading = chartTypes[compName].heading;\n      this.html = chartTypes[compName].html;\n      this.ts = chartTypes[compName].ts;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartType } from 'chart.js';\nimport { MultiDataSet, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-doughnut-chart',\n  templateUrl: './doughnut-chart.component.html',\n  styleUrls: ['./doughnut-chart.component.scss']\n})\nexport class DoughnutChartComponent implements OnInit {\n  // Doughnut\n  public doughnutChartLabels: Label[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n  public doughnutChartData: MultiDataSet = [\n    [350, 450, 100],\n    [50, 150, 120],\n    [250, 130, 70],\n  ];\n  public doughnutChartType: ChartType = 'doughnut';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtY2hhcnQvZHluYW1pYy1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-dynamic-chart',\n  templateUrl: './dynamic-chart.component.html',\n  styleUrls: ['./dynamic-chart.component.scss']\n})\nexport class DynamicChartComponent implements OnInit {\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n  };\n  public barChartLabels: Label[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: ChartDataSets[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public randomize(): void {\n    this.barChartType = this.barChartType === 'bar' ? 'line' : 'bar';\n  }\n}\n","module.exports = \".chart {\\n  display: block;\\n  width: 1300px;\\n  height: 600px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYW5jaWFsLWNoYXJ0L2ZpbmFuY2lhbC1jaGFydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGFBQWE7RUFDYixhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9maW5hbmNpYWwtY2hhcnQvZmluYW5jaWFsLWNoYXJ0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEzMDBweDtcbiAgaGVpZ2h0OiA2MDBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport 'dist/chartjs-chart-financial/chartjs-chart-financial';\nimport * as luxon from 'luxon';\nimport 'chartjs-adapter-luxon';\nimport { ChartOptions } from 'chart.js';\nimport { Color, BaseChartDirective } from 'ng2-charts';\n\n@Component({\n  selector: 'app-financial-chart',\n  templateUrl: './financial-chart.component.html',\n  styleUrls: ['./financial-chart.component.css']\n})\nexport class FinancialChartComponent implements OnInit {\n  barCount = 60;\n  initialDateStr = '01 Apr 2017 00:00 Z';\n\n  public financialChartData = [\n    {\n      label: 'CHRT - Chart.js Corporation',\n      data: this.getRandomData(this.initialDateStr, this.barCount)\n    },\n  ];\n  public financialChartOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n  };\n  public financialChartColors: Color[] = [\n    {\n      borderColor: 'black',\n      backgroundColor: 'rgba(255,0,0,0.3)',\n    },\n  ];\n  public financialChartLegend = true;\n  public financialChartType = 'candlestick';\n  public financialChartPlugins = [];\n\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  randomNumber(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n  }\n\n  randomBar(date: luxon.DateTime, lastClose: number) {\n    const open = this.randomNumber(lastClose * 0.95, lastClose * 1.05);\n    const close = this.randomNumber(open * 0.95, open * 1.05);\n    const high = this.randomNumber(Math.max(open, close), Math.max(open, close) * 1.1);\n    const low = this.randomNumber(Math.min(open, close) * 0.9, Math.min(open, close));\n    return {\n      t: date.valueOf(),\n      o: open,\n      h: high,\n      l: low,\n      c: close\n    };\n  }\n\n  getRandomData(dateStr: string, count: number) {\n    let date = luxon.DateTime.fromRFC2822(dateStr);\n    const data = [this.randomBar(date, 30)];\n    while (data.length < count) {\n      date = date.plus({ days: 1 });\n      if (date.weekday <= 5) {\n        data.push(this.randomBar(date, data[data.length - 1].c));\n      }\n    }\n    return data;\n  }\n\n  update() {\n    // candlestick vs ohlc\n    this.financialChartType = this.financialChartType === 'candlestick' ? 'ohlc' : 'candlestick';\n  }\n}\n","module.exports = \".flex {\\n  display: flex;\\n}\\n\\n.flex-item {\\n  flex-basis: 50%;\\n}\\n\\ntr.line-2 {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzL1dlYnN0b3JtUHJvamVjdHMvZm9yay1uZzItY2hhcnRzL25nMi1jaGFydHMvc3JjL2FwcC9saW5lLWNoYXJ0L2xpbmUtY2hhcnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7QUNDRjs7QURFQTtFQUNFLFVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZsZXgtaXRlbSB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbn1cblxudHIubGluZS0yIHtcbiAgY29sb3I6IHJlZDtcbn1cbiIsIi5mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZsZXgtaXRlbSB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbn1cblxudHIubGluZS0yIHtcbiAgY29sb3I6IHJlZDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit {\n  public lineChartData: ChartDataSets[] = [\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n    { data: [180, 480, 770, 90, 1000, 270, 400], label: 'Series C', yAxisID: 'y-axis-1' }\n  ];\n  public lineChartLabels: Label[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [{}],\n      yAxes: [\n        {\n          id: 'y-axis-0',\n          position: 'left',\n        },\n        {\n          id: 'y-axis-1',\n          position: 'right',\n          gridLines: {\n            color: 'rgba(255,0,0,0.3)',\n          },\n          ticks: {\n            fontColor: 'red',\n          }\n        }\n      ]\n    },\n    annotation: {\n      annotations: [\n        {\n          type: 'line',\n          mode: 'vertical',\n          scaleID: 'x-axis-0',\n          value: 'March',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            enabled: true,\n            fontColor: 'orange',\n            content: 'LineAnno'\n          }\n        },\n      ],\n    },\n  };\n  public lineChartColors: Color[] = [\n    { // grey\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\n    },\n    { // red\n      backgroundColor: 'rgba(255,0,0,0.3)',\n      borderColor: 'red',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [pluginAnnotations];\n\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public randomize(): void {\n    for (let i = 0; i < this.lineChartData.length; i++) {\n      for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n        this.lineChartData[i].data[j] = this.generateNumber(i);\n      }\n    }\n    this.chart.update();\n  }\n\n  private generateNumber(i: number) {\n    return Math.floor((Math.random() * (i < 2 ? 100 : 1000)) + 1);\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public hideOne() {\n    const isHidden = this.chart.isDatasetHidden(1);\n    this.chart.hideDataset(1, !isHidden);\n  }\n\n  public pushOne() {\n    this.lineChartData.forEach((x, i) => {\n      const num = this.generateNumber(i);\n      const data: number[] = x.data as number[];\n      data.push(num);\n    });\n    this.lineChartLabels.push(`Label ${this.lineChartLabels.length}`);\n  }\n\n  public changeColor() {\n    this.lineChartColors[2].borderColor = 'green';\n    this.lineChartColors[2].backgroundColor = `rgba(0, 255, 0, 0.3)`;\n  }\n\n  public changeLabel() {\n    this.lineChartLabels[2] = ['1st Line', '2nd Line'];\n    // this.chart.update();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTableModule,\n  ],\n  exports: [\n    MatToolbarModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTableModule,\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \".chart {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZzL1dlYnN0b3JtUHJvamVjdHMvZm9yay1uZzItY2hhcnRzL25nMi1jaGFydHMvc3JjL2FwcC9waWUtY2hhcnQvcGllLWNoYXJ0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9waWUtY2hhcnQvcGllLWNoYXJ0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGllLWNoYXJ0L3BpZS1jaGFydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIiwiLmNoYXJ0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartType, ChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n  // Pie\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n    legend: {\n      position: 'top',\n    },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = ctx.chart.data.labels[ctx.dataIndex];\n          return label;\n        },\n      },\n    }\n  };\n  public pieChartLabels: Label[] = [['Download', 'Sales'], ['In', 'Store', 'Sales'], 'Mail Sales'];\n  public pieChartData: number[] = [300, 500, 100];\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [pluginDataLabels];\n  public pieChartColors = [\n    {\n      backgroundColor: ['rgba(255,0,0,0.3)', 'rgba(0,255,0,0.3)', 'rgba(0,0,255,0.3)'],\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  changeLabels() {\n    const words = ['hen', 'variable', 'embryo', 'instal', 'pleasant', 'physical', 'bomber', 'army', 'add', 'film',\n      'conductor', 'comfortable', 'flourish', 'establish', 'circumstance', 'chimney', 'crack', 'hall', 'energy',\n      'treat', 'window', 'shareholder', 'division', 'disk', 'temptation', 'chord', 'left', 'hospital', 'beef',\n      'patrol', 'satisfied', 'academy', 'acceptance', 'ivory', 'aquarium', 'building', 'store', 'replace', 'language',\n      'redeem', 'honest', 'intention', 'silk', 'opera', 'sleep', 'innocent', 'ignore', 'suite', 'applaud', 'funny'];\n    const randomWord = () => words[Math.trunc(Math.random() * words.length)];\n    this.pieChartLabels = Array.apply(null, { length: 3 }).map(_ => randomWord());\n  }\n\n  addSlice() {\n    this.pieChartLabels.push(['Line 1', 'Line 2', 'Line 3']);\n    this.pieChartData.push(400);\n    this.pieChartColors[0].backgroundColor.push('rgba(196,79,244,0.3)');\n  }\n\n  removeSlice() {\n    this.pieChartLabels.pop();\n    this.pieChartData.pop();\n    this.pieChartColors[0].backgroundColor.pop();\n  }\n\n  changeLegendPosition() {\n    this.pieChartOptions.legend.position = this.pieChartOptions.legend.position === 'left' ? 'top' : 'left';\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvbGFyLWFyZWEtY2hhcnQvcG9sYXItYXJlYS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SingleDataSet, Label } from 'ng2-charts';\nimport { ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-polar-area-chart',\n  templateUrl: './polar-area-chart.component.html',\n  styleUrls: ['./polar-area-chart.component.scss']\n})\nexport class PolarAreaChartComponent implements OnInit {\n  // PolarArea\n  public polarAreaChartLabels: Label[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n  public polarAreaChartData: SingleDataSet = [300, 500, 100, 40, 120];\n  public polarAreaLegend = true;\n\n  public polarAreaChartType: ChartType = 'polarArea';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhZGFyLWNoYXJ0L3JhZGFyLWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartType, RadialChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-radar-chart',\n  templateUrl: './radar-chart.component.html',\n  styleUrls: ['./radar-chart.component.scss']\n})\nexport class RadarChartComponent implements OnInit {\n  // Radar\n  public radarChartOptions: RadialChartOptions = {\n    responsive: true,\n  };\n  public radarChartLabels: Label[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n\n  public radarChartData: ChartDataSets[] = [\n    { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\n    { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\n  ];\n  public radarChartType: ChartType = 'radar';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjYXR0ZXItY2hhcnQvc2NhdHRlci1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartType, ChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-scatter-chart',\n  templateUrl: './scatter-chart.component.html',\n  styleUrls: ['./scatter-chart.component.scss']\n})\nexport class ScatterChartComponent implements OnInit {\n  // scatter\n  public scatterChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public scatterChartLabels: Label[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n\n  public scatterChartData: ChartDataSets[] = [\n    {\n      data: [\n        { x: 1, y: 1 },\n        { x: 2, y: 3 },\n        { x: 3, y: -2 },\n        { x: 4, y: 4 },\n        { x: 5, y: -3 },\n      ],\n      label: 'Series A',\n      pointRadius: 10,\n    },\n  ];\n  public scatterChartType: ChartType = 'scatter';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // events\n  public chartClicked({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n\n  public chartHovered({ event, active }: { event: MouseEvent, active: {}[] }): void {\n    console.log(event, active);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base: '',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}